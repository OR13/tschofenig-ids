<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.39 (Ruby 3.0.2) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>

<?rfc rfcedstyle="yes"?>
<?rfc tocindent="yes"?>
<?rfc strict="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc text-list-symbols="-o*+"?>
<?rfc docmapping="yes"?>

<rfc ipr="trust200902" docName="draft-tschofenig-jose-cose-guidance-00" category="bcp" consensus="true" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="COSE/JOSE Guidance">Guidance for COSE and JOSE Protocol Designers and Implementers</title>

    <author initials="H." surname="Tschofenig" fullname="Hannes Tschofenig">
      <organization></organization>
      <address>
        <email>hannes.tschofenig@siemens.com</email>
      </address>
    </author>
    <author initials="L." surname="Hazlewood" fullname="Les Hazlewood">
      <organization></organization>
      <address>
        <email>lhazlewood@gmail.com</email>
      </address>
    </author>

    <date year="2023" month="October" day="20"/>

    <area>Security</area>
    <workgroup>JOSE</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<?line 43?>

<t>JSON Object Signing and Encryption (JOSE) and  CBOR Object Signing
and Encryption (COSE) are two widely used security wrappers, which
have been developed in the IETF and have intentionally been kept
in sync.</t>

<t>This document provides guidance for protocol designers developing
extensions for JOSE/COSE and for implementers of JOSE/COSE libraries.
Developers of application using JSON and/or JOSE should also read
this document but are realistically more focused on the documentation
offered by the library they are using.</t>



    </abstract>



  </front>

  <middle>


<?line 56?>

<section anchor="introduction"><name>Introduction</name>

<t>JSON Object Signing and Encryption (JOSE) has initially been designed
to offer provide a security wrapper for access tokens used by the
OAuth protocol. The larger applicability of a standard for describing
a security-related meta-data was, however, immediately recognized.
Today, JOSE is in wide spread use.</t>

<t>With the development of CBOR a binary encoding format was developed
to address use cases where JSON was too verbose. A security wrapper
that uses CBOR-based encoding was needed and CBOR Object Signing
and Encryption (COSE) was standardized.</t>

<t>The JOSE and COSE specifications have intentionally been kept in
sync since protocols and payloads today are often described in
the Concise Data Definition Language (CDDL) and serialized to
either JOSE or COSE thereby making them attractive to developers
from the web and the embedded world at the same time. Due to the
similarity of the designs, the guidance provided in this document
is therefore applicable to JOSE and COSE.</t>

<t>Unfortunately, some practices cause challenges from a security
point of view and this document captures those. We hope that this
document helps to design better extensions for JOSE/COSE and to
make the life of developers easier.</t>

<t>The document is structured as follows. <xref target="kid"/> describes the
challenges with key identification. Future versions of this
document will add further challenges. <xref target="guidance"/> then offers
guidance for how to create better designs for JOSE/COSE.</t>

</section>
<section anchor="terminology-and-requirements-language"><name>Terminology and Requirements Language</name>

<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
"SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
document are to be interpreted as described in RFC 2119 <xref target="RFC2119"/>.</t>

</section>
<section anchor="kid"><name>Key Identification</name>

<t>The security wrappers in JOSE and COSE use a simple design, at least
for the basic functionality like digital signatures and MACs for a
single recipient.</t>

<t>The structure is as follows:</t>

<t><list style="symbols">
  <t>A header, which is split into a protected and unprotected parameters.</t>
  <t>An optional payload. It is optional because the payload may be detached.
 This is the payload we want to protect. In many applications this
 payload is a JSON-based payload (in case of JOSE) or a CBOR-encoded
 payload (in case of COSE). Various IETF specifications exist that
 standardize the content of these payloads.</t>
  <t>A digital signature, a tag (for a MAC), or a ciphertext (for encryption).</t>
</list></t>

<t>The purpose of the header is to provide instructions for the protection of
the payload, including</t>

<t><list style="symbols">
  <t>algorithm information used to provide protection of the payload,</t>
  <t>the identification of the key to verify the digital signature, MAC, or
encryption,</t>
  <t>X.509 certificates and certificate chains,</t>
  <t>countersignature.</t>
</list></t>

<t>Although the layering is quite simple with the header providing the information
to provide protection of the payload, some specifications and applications
started to place information for key identification inside the payload. This
approach destroys the clear layering.</t>

<t>Additionally, it forces a JOSE/COSE parser to defer security processing of the
payload to a later point in time and to look inside the payload to find the
appropriate keying material to subsequently verify the payload.</t>

<t>There is no need for such design since there are existing header parameters
available to store the necessary information. If those headers are insufficient,
then it is always possible to define new header parameter to convey this informtion.
This approach also simplifies libraries since they do not need to understand
the payload content to fetch the correct information.</t>

<t>Finally, an easy transition from a system using digital signatures over
payloads to encrypted payloads is not possible since information needed
for key look-up are found in the encrypted payload. A re-design would
therefore be required.</t>

</section>
<section anchor="guidance"><name>Guidance</name>

<t>We RECOMMEND that protocol designers and implementers use the
available header parameter for key identification. If the standardized
parameters are insufficient, new header parameters can be defined.
Re-using existing header parameters will improve interoperability
because there are a limited number of cases on how to select a key.</t>

<t>Information that is needed for determining the keying material needed
to cryptographically verify the protected payload MUST be placed
into the header of the JOSE/COSE security wrapper.</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>This document does not make requests to IANA.</t>

</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>This specification makes security recommendations for the
JOSE/COSE specification suite. Therefore, it is entirely
about security.</t>

</section>


  </middle>

  <back>


    <references title='Normative References'>



<reference anchor="RFC2119">
  <front>
    <title>Key words for use in RFCs to Indicate Requirement Levels</title>
    <author fullname="S. Bradner" initials="S." surname="Bradner"/>
    <date month="March" year="1997"/>
    <abstract>
      <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="2119"/>
  <seriesInfo name="DOI" value="10.17487/RFC2119"/>
</reference>




    </references>

    <references title='Informative References'>




<reference anchor="I-D.tschofenig-rats-psa-token">
   <front>
      <title>Arm&#x27;s Platform Security Architecture (PSA) Attestation Token</title>
      <author fullname="Hannes Tschofenig" initials="H." surname="Tschofenig">
         </author>
      <author fullname="Simon Frost" initials="S." surname="Frost">
         <organization>Arm Limited</organization>
      </author>
      <author fullname="Mathias Brossard" initials="M." surname="Brossard">
         <organization>Arm Limited</organization>
      </author>
      <author fullname="Adrian L. Shaw" initials="A. L." surname="Shaw">
         <organization>HP Labs</organization>
      </author>
      <author fullname="Thomas Fossati" initials="T." surname="Fossati">
         <organization>Linaro</organization>
      </author>
      <date day="1" month="September" year="2023"/>
      <abstract>
	 <t>   The Platform Security Architecture (PSA) is a family of hardware and
   firmware security specifications, as well as open-source reference
   implementations, to help device makers and chip manufacturers build
   best-practice security into products.  Devices that are PSA compliant
   are able to produce attestation tokens as described in this memo,
   which are the basis for a number of different protocols, including
   secure provisioning and network access control.  This document
   specifies the PSA attestation token structure and semantics.

   The PSA attestation token is a profiled Entity Attestation Token
   (EAT).

   This specification describes what claims are used in an attestation
   token generated by PSA compliant systems, how these claims get
   serialized to the wire, and how they are cryptographically protected.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-tschofenig-rats-psa-token-13"/>
   
</reference>




    </references>


<?line 161?>

<section anchor="acknowledgments"><name>Acknowledgments</name>

<t>TBD: Add your name here.</t>

</section>


  </back>

<!-- ##markdown-source:
H4sIAAAAAAAAA5VYwXLcNhK9T9X8A8q+2Flx7LhqD9YpimRvlJWtrCxvdk9b
GBIzg4gDcAFQk4nL/77vNUAOR1KyFR8sDgk2ul+/ft1gVVXzWbKpNafqb71t
tKuNWvmgzq8/vVPaNepHXvwUfPK1b9WFiXbtTIjy7HLbtWZrXMKN+Ww+08tl
MPen8vIreXGwOZ81vnZ6i22aoFepSrHe+JVxdl394qOpav63Lqur16/ns1on
s/Zhf6qWdUfrtgunKoU+pjevX799/Qb7BaNP1SdT98Gm/Xy28+FuHXzfnYrb
89md2eNec6ou6aMzqbrg7rQWEyL4j269g097A/87ezqfKRVWtWli2rfDfaUQ
+/TaugYxj3eiDymYVTzc2G+Pf6dg68P62m+J2eG5da11k93Mr6lqbUwVDC19
i4WV/+YvfAQQt7rrrFuX1bpPGx/od8Xn/GcdXvhhoW5HhIcnGf8ftHMmPvHY
bLVtT9VGni8OCfouWiY5LuD4sNaH9SlRfLDt1QLmf2vNzvvmeNcrbPnoUdlR
tZvhyXdr3npqJ+fDVid7byRJN+/P33z77VtcW7c6enJZXUx8r4JOseqirpK/
M04sVVWl9BJJ0bUw4cdP1x/V9fIXUyf1CewGusLud64O+y5Z79QL0uml3FXn
31/fPFiOPDxYf57XB6PSzqudbUy7V300jYqFrWoXkEkUzonabWy9mc82+t6o
pTFONebetL7DautU2hh1+e72vewuayzI7LiPbmFV3rgzXSIW4J6rF4zqdmMj
+dKTa6oL/h5ORLWeFnk3lHUzlnXZWoICD5F27BNlNTF4NeoC79hJ/Su/mqxo
7TLoYMGj+eyiRJPXIOjWorYJUx+JteAPk6/KHipufN82SrfRK1Q46JKOgln2
SaDFM5YJrBGHrQ+MqhaUfcZteEW2m8/8amUCni738jQ7Kdd7MSj+LAaObG3T
tIa/nisKSPBNX2dDf4Y0Gx2RMZvsIVsFbgbmlTg1JEjpRwQRpHVdmxiVkDhm
IuUg5rPrM2jAmErUPSPTYY03C9ZL29IewVciezrk/MGPOthlZvC4cRVMC+1t
1NYkXTU6abXToOnG75DJcIK0b01jsQTxBFN7RP+baYDbrW/0/iQn0TJqYb6K
HbNIrwXbny38lexkYkhO4ZwUllZwh0kxrvYNUc3lTRcOdSHA6aYJBAV2Va0j
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
PxwzbBbCFwAA

-->

</rfc>

