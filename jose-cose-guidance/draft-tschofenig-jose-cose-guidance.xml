<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.1 (Ruby 3.0.2) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>

<?rfc rfcedstyle="yes"?>
<?rfc tocindent="yes"?>
<?rfc strict="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc text-list-symbols="-o*+"?>
<?rfc docmapping="yes"?>

<rfc ipr="trust200902" docName="draft-tschofenig-jose-cose-guidance-00" category="bcp" consensus="true" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="COSE/JOSE Guidance">Guidance for COSE and JOSE Protocol Designers and Implementers</title>

    <author initials="H." surname="Tschofenig" fullname="Hannes Tschofenig">
      <organization></organization>
      <address>
        <email>hannes.tschofenig@gmx.net</email>
      </address>
    </author>
    <author initials="L." surname="Hazlewood" fullname="Les Hazlewood">
      <organization></organization>
      <address>
        <email>lhazlewood@gmail.com</email>
      </address>
    </author>

    <date year="2023" month="October" day="23"/>

    <area>Security</area>
    <workgroup>JOSE</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<?line 45?>

<t>JSON Object Signing and Encryption (JOSE) and  CBOR Object Signing
and Encryption (COSE) are two widely used security wrappers, which
have been developed in the IETF and have intentionally been kept
in sync.</t>

<t>This document provides guidance for protocol designers developing
extensions for JOSE/COSE and for implementers of JOSE/COSE libraries.
Developers of application using JSON and/or JOSE should also read
this document but are realistically more focused on the documentation
offered by the library they are using.</t>



    </abstract>



  </front>

  <middle>


<?line 58?>

<section anchor="introduction"><name>Introduction</name>

<t>JSON Object Signing and Encryption (JOSE) has initially been designed
to offer provide a security wrapper for access tokens used by the
OAuth protocol, particularly a digital signature. The wider
applicability of a standard for describing security-related
meta-data was, however, immediately recognized. Today, JOSE is
in widespread use and the functionality is spread accross various
specifications (such as <xref target="RFC7515"/> for the JSON Web Signature and
<xref target="RFC7516"/> for JSON Web Encryption).</t>

<t>With the development of CBOR <xref target="RFC8949"/> a binary encoding format was developed
to address use cases where JSON was too verbose. A security wrapper
that uses CBOR-based encoding was needed and CBOR Object Signing
and Encryption (COSE) was standardized and later updated with
<xref target="RFC9052"/> and <xref target="RFC9053"/>.</t>

<t>The JOSE and COSE specifications have intentionally been kept in
sync since protocols and payloads today are often described in
the Concise Data Definition Language (CDDL) and serialized to
either JOSE or COSE thereby making them attractive to developers
from the web and the embedded world at the same time. Due to the
similarity of the designs, the guidance provided in this document
is therefore applicable to JOSE and COSE.</t>

<t>Unfortunately, some practices cause challenges from a security
point of view and this document captures those. We hope that this
document helps to design better extensions for JOSE/COSE and to
make the life of developers easier.</t>

<t>The document is structured as follows. <xref target="kid"/> describes the
challenges with key identification. Future versions of this
document will add further challenges. <xref target="guidance"/> then offers
guidance for how to create better designs for JOSE/COSE.</t>

</section>
<section anchor="terminology-and-requirements-language"><name>Terminology and Requirements Language</name>

<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
"SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
document are to be interpreted as described in RFC 2119 <xref target="RFC2119"/>.</t>

</section>
<section anchor="kid"><name>Key Identification</name>

<t>The security wrappers in JOSE and COSE use a simple design, at least
for the basic functionality like digital signatures and MACs using a
single recipient.</t>

<t>The security wrapper contains the following structure:</t>

<t><list style="symbols">
  <t>A header, which is split into a protected and unprotected parameters.</t>
  <t>The payload, which may be detached and will then be conveyed
 independently. This is the payload we want to protect. In many applications this
 payload is a JSON-based payload (in case of JOSE) or a CBOR-encoded payload
 (in case of COSE). There are also standardize payloads, such as JSON Web Token
 (JWT) <xref target="RFC7519"/> and CBOR Web Token (CWT) <xref target="RFC8392"/>.</t>
  <t>A digital signature, a tag (for a MAC), or a ciphertext (for encryption).</t>
</list></t>

<t>The purpose of the header is to provide instructions for the protection of
the payload, including</t>

<t><list style="symbols">
  <t>algorithm information used to provide protection of the payload,</t>
  <t>the identification of the key to verify the digital signature, MAC, or
encryption,</t>
  <t>X.509 certificates and certificate chains,</t>
  <t>countersignature.</t>
</list></t>

<t>Although the layering is quite simple with the header providing the information
to provide protection of the payload, some specifications and applications
started to place information for key identification inside the payload. This
approach destroys the clear layering.</t>

<t>The use of the 'kid' parameter is the preferred way to identify a key but
nothing in <xref target="RFC7515"/> states that the key identification values must be
globally unique (and therefore "collision resistant"). If a JOSE-/COSE-protected
message is intended for external/3rd party recipients, then</t>

<t><list style="symbols">
  <t>the 'kid' parameter MUST contain a globally unique value, or</t>
  <t>other header parameters when combined associated with the 'kid' result in a
globally unique value.</t>
</list></t>

<t>If a JOSE-/COSE-protected message is used in a domain-specific context only,
such as within an enterprise or a workload environment, then the uniqueness
requirements are lifted.</t>

<t>The practice of placing some or all key identification into the payload, instead
of the JOSE/COSE header, forces a parser to defer security processing of the
payload to a later point in time, to look inside the payload to find the
appropriate keying material and to subsequently verify the payload. Since the
parser implementation does not know what fields will be used for key identification
it has to expose all information to an application prior to signature verification
or MAC processing. There is a large risk that application developers make security-
relevant decisions already prior to the completion of the security processing.</t>

<t>There is no need for such design since there are existing header parameters
available to store the necessary information. If those headers are insufficient,
then it is always possible to define new header parameter to convey this information.
This approach also simplifies libraries since they do not need to understand
the payload content to fetch the correct information.</t>

<t>When key identification-related claims are placed in the payload, those
claims SHOULD be repeated in the header, as defined in <xref target="I-D.ietf-cose-cwt-claims-in-headers"/> (for COSE)
and in <xref section="5.3" sectionFormat="of" target="RFC7519"/> (for JOSE). This approach should only be
used as a last resort, when the previous two approaches cannot be used.</t>

<t>Finally, an easy transition from a system using digital signatures over
payloads to encrypted payloads is not possible since information needed
for key look-up are found in the encrypted payload. A re-design would
therefore be required.</t>

</section>
<section anchor="guidance"><name>Guidance</name>

<t>We RECOMMEND that protocol designers and implementers use the
available header parameter for key identification. If the standardized
parameters are insufficient, new header parameters can be defined.
Re-using existing header parameters will improve interoperability
because there are a limited number of cases on how to select a key.</t>

<t>Information that is needed for determining the keying material needed
to cryptographically verify the protected payload MUST be placed
into the header of the JOSE/COSE security wrapper.</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<t>This document does not make requests to IANA.</t>

</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>This specification makes security recommendations for the
JOSE/COSE specification suite. Therefore, it is entirely
about security.</t>

</section>


  </middle>

  <back>


    <references title='Normative References' anchor="sec-normative-references">



<reference anchor="RFC2119">
  <front>
    <title>Key words for use in RFCs to Indicate Requirement Levels</title>
    <author fullname="S. Bradner" initials="S." surname="Bradner"/>
    <date month="March" year="1997"/>
    <abstract>
      <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="2119"/>
  <seriesInfo name="DOI" value="10.17487/RFC2119"/>
</reference>

<reference anchor="RFC7515">
  <front>
    <title>JSON Web Signature (JWS)</title>
    <author fullname="M. Jones" initials="M." surname="Jones"/>
    <author fullname="J. Bradley" initials="J." surname="Bradley"/>
    <author fullname="N. Sakimura" initials="N." surname="Sakimura"/>
    <date month="May" year="2015"/>
    <abstract>
      <t>JSON Web Signature (JWS) represents content secured with digital signatures or Message Authentication Codes (MACs) using JSON-based data structures. Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and an IANA registry defined by that specification. Related encryption capabilities are described in the separate JSON Web Encryption (JWE) specification.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7515"/>
  <seriesInfo name="DOI" value="10.17487/RFC7515"/>
</reference>

<reference anchor="RFC7516">
  <front>
    <title>JSON Web Encryption (JWE)</title>
    <author fullname="M. Jones" initials="M." surname="Jones"/>
    <author fullname="J. Hildebrand" initials="J." surname="Hildebrand"/>
    <date month="May" year="2015"/>
    <abstract>
      <t>JSON Web Encryption (JWE) represents encrypted content using JSON-based data structures. Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and IANA registries defined by that specification. Related digital signature and Message Authentication Code (MAC) capabilities are described in the separate JSON Web Signature (JWS) specification.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7516"/>
  <seriesInfo name="DOI" value="10.17487/RFC7516"/>
</reference>

<reference anchor="RFC9052">
  <front>
    <title>CBOR Object Signing and Encryption (COSE): Structures and Process</title>
    <author fullname="J. Schaad" initials="J." surname="Schaad"/>
    <date month="August" year="2022"/>
    <abstract>
      <t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size. There is a need to be able to define basic security services for this data format. This document defines the CBOR Object Signing and Encryption (COSE) protocol. This specification describes how to create and process signatures, message authentication codes, and encryption using CBOR for serialization. This specification additionally describes how to represent cryptographic keys using CBOR.</t>
      <t>This document, along with RFC 9053, obsoletes RFC 8152.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="96"/>
  <seriesInfo name="RFC" value="9052"/>
  <seriesInfo name="DOI" value="10.17487/RFC9052"/>
</reference>

<reference anchor="RFC8949">
  <front>
    <title>Concise Binary Object Representation (CBOR)</title>
    <author fullname="C. Bormann" initials="C." surname="Bormann"/>
    <author fullname="P. Hoffman" initials="P." surname="Hoffman"/>
    <date month="December" year="2020"/>
    <abstract>
      <t>The Concise Binary Object Representation (CBOR) is a data format whose design goals include the possibility of extremely small code size, fairly small message size, and extensibility without the need for version negotiation. These design goals make it different from earlier binary serializations such as ASN.1 and MessagePack.</t>
      <t>This document obsoletes RFC 7049, providing editorial improvements, new details, and errata fixes while keeping full compatibility with the interchange format of RFC 7049. It does not create a new version of the format.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="94"/>
  <seriesInfo name="RFC" value="8949"/>
  <seriesInfo name="DOI" value="10.17487/RFC8949"/>
</reference>

<reference anchor="RFC9053">
  <front>
    <title>CBOR Object Signing and Encryption (COSE): Initial Algorithms</title>
    <author fullname="J. Schaad" initials="J." surname="Schaad"/>
    <date month="August" year="2022"/>
    <abstract>
      <t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size. There is a need to be able to define basic security services for this data format. This document defines a set of algorithms that can be used with the CBOR Object Signing and Encryption (COSE) protocol (RFC 9052).</t>
      <t>This document, along with RFC 9052, obsoletes RFC 8152.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9053"/>
  <seriesInfo name="DOI" value="10.17487/RFC9053"/>
</reference>

<reference anchor="RFC7519">
  <front>
    <title>JSON Web Token (JWT)</title>
    <author fullname="M. Jones" initials="M." surname="Jones"/>
    <author fullname="J. Bradley" initials="J." surname="Bradley"/>
    <author fullname="N. Sakimura" initials="N." surname="Sakimura"/>
    <date month="May" year="2015"/>
    <abstract>
      <t>JSON Web Token (JWT) is a compact, URL-safe means of representing claims to be transferred between two parties. The claims in a JWT are encoded as a JSON object that is used as the payload of a JSON Web Signature (JWS) structure or as the plaintext of a JSON Web Encryption (JWE) structure, enabling the claims to be digitally signed or integrity protected with a Message Authentication Code (MAC) and/or encrypted.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7519"/>
  <seriesInfo name="DOI" value="10.17487/RFC7519"/>
</reference>

<reference anchor="RFC8392">
  <front>
    <title>CBOR Web Token (CWT)</title>
    <author fullname="M. Jones" initials="M." surname="Jones"/>
    <author fullname="E. Wahlstroem" initials="E." surname="Wahlstroem"/>
    <author fullname="S. Erdtman" initials="S." surname="Erdtman"/>
    <author fullname="H. Tschofenig" initials="H." surname="Tschofenig"/>
    <date month="May" year="2018"/>
    <abstract>
      <t>CBOR Web Token (CWT) is a compact means of representing claims to be transferred between two parties. The claims in a CWT are encoded in the Concise Binary Object Representation (CBOR), and CBOR Object Signing and Encryption (COSE) is used for added application-layer security protection. A claim is a piece of information asserted about a subject and is represented as a name/value pair consisting of a claim name and a claim value. CWT is derived from JSON Web Token (JWT) but uses CBOR rather than JSON.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8392"/>
  <seriesInfo name="DOI" value="10.17487/RFC8392"/>
</reference>


<reference anchor="I-D.ietf-cose-cwt-claims-in-headers">
   <front>
      <title>CBOR Web Token (CWT) Claims in COSE Headers</title>
      <author fullname="Tobias Looker" initials="T." surname="Looker">
         <organization>Mattr</organization>
      </author>
      <author fullname="Michael B. Jones" initials="M. B." surname="Jones">
         <organization>Self-Issued Consulting</organization>
      </author>
      <date day="22" month="October" year="2023"/>
      <abstract>
	 <t>   This document describes how to include CBOR Web Token (CWT) claims in
   the header parameters of any COSE structure.  This functionality
   helps to facilitate applications that wish to make use of CBOR Web
   Token (CWT) claims in encrypted COSE structures and/or COSE
   structures featuring detached signatures, while having some of those
   claims be available before decryption and/or without inspecting the
   detached payload.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-cose-cwt-claims-in-headers-07"/>
   
</reference>




    </references>



<?line 195?>

<section anchor="acknowledgments"><name>Acknowledgments</name>

<t>TBD: Add your name here.</t>

</section>


  </back>

<!-- ##markdown-source:
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
PyZq/nhxps7LUu1c6+XjoKJ4vPo/EPhdd4geAAA=

-->

</rfc>

