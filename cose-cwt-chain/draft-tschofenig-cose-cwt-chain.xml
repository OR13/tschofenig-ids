<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.4 (Ruby 3.0.2) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>

<?rfc rfcedstyle="yes"?>
<?rfc tocindent="yes"?>
<?rfc strict="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc text-list-symbols="-o*+"?>
<?rfc docmapping="yes"?>

<rfc ipr="trust200902" docName="draft-tschofenig-cose-cwt-chain-00" category="std" consensus="true" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="CWT Chains">CBOR Object Signing and Encryption (COSE): Header Parameters for Carrying and Referencing Chains of CBOR Web Tokens (CWTs)</title>

    <author initials="H." surname="Tschofenig" fullname="Hannes Tschofenig">
      <organization></organization>
      <address>
        <email>hannes.tschofenig@gmx.net</email>
      </address>
    </author>
    <author initials="K." surname="Takayama" fullname="Ken Takayama">
      <organization>SECOM CO., LTD.</organization>
      <address>
        <email>ken.takayama.ietf@gmail.com</email>
      </address>
    </author>

    <date year="2023" month="December" day="16"/>

    <area>Security</area>
    <workgroup>COSE</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<?line 62?>

<t>The CBOR Object Signing and Encryption (COSE) message structure uses
references to keys and defines header parameters to carry chains of X.509
certificates.</t>

<t>This specification extends this functionality to CBOR Web Tokens (CWTs).</t>



    </abstract>



  </front>

  <middle>


<?line 70?>

<section anchor="introduction"><name>Introduction</name>

<t>The CBOR Object Signing and Encryption (COSE) message structure uses
references to keys and defines header parameters to carry chains of X.509
certificates. The header parameters for conveying X.509 certificate chains
in a COSE payload are defined in <xref target="RFC9360"/>. This document is inspired by
RFC 9360 and re-uses text as much as possible and is intentionally aligned.</t>

<t>This specification defines header parameters to convey chains of CBOR Web
Tokens (CWTs) <xref target="RFC8392"/>. The use of chains of CWTs allows a trust
infrastructure established by CWTs to be used with COSE. The Concise Binary
Object Representation (CBOR) key structures <xref target="RFC8949"/> that have been
defined in COSE support the use of X.509 certificates. While there is a lot
of X.509 infrastructure and protocol support available, CWTs are used in
environments successfully.</t>

<t>These chains of CWTs allow path validation similarly to what a X.509
certificate-based Public Key Infrastructure (PKI) provides. Applying PKI-based
concepts is new to CWTs, new terminology is introduced. Path validation
is an important part of establishing trust in a CWT and Section 6 of
<xref target="RFC5280"/> provides guidance. When applying path validation, as defined
in RFC 5280, to CWTs the reader needs to treat them as certificates,
assuming CWTs also carry a public key -- see <xref target="RFC8747"/>. Keep in mind
that many of the advanced features available with an X.509 certificate-based
PKI are, at the time of writing, not available with CWTs. The authors do,
however, believe differences will vanish as CWT-based deployments scale.</t>

</section>
<section anchor="terminology-and-requirements-language"><name>Terminology and Requirements Language</name>

<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
"SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
document are to be interpreted as described in RFC 2119 <xref target="RFC2119"/>.</t>

<t>The following terms are useful for readers of this document:</t>

<t><list style="symbols">
  <t>end entity: user of CWT and/or end user system that is the subject of a CWT;</t>
  <t>CA: certification authority; often corresponds to an authorization
server in the context of CWTs.</t>
  <t>RA: registration authority, i.e., an optional system to which
a CA delegates certain management functions; while often used in PKI
deployments it is a role that has not found usage in systems using CWTs.</t>
  <t>CRL issuer: a system that generates and signs Certificate Revocation
Lists (CRLs); The term CRL is used generically to also refer to status
lists <xref target="I-D.ietf-oauth-status-list"/>.</t>
  <t>repository: a system or collection of distributed systems that stores
CWTs and CRLs and serves as a means of distributing these CWTs and CRLs
to end entities. These repositories may be append-only databases, in the
style of <xref target="I-D.mcmillion-keytrans-architecture"/>.</t>
</list></t>

</section>
<section anchor="cwt-cose-header-parameters"><name>CWT COSE Header Parameters</name>

<t>Parties that intend to rely on the assertions made by a CWTs
obtained from any of these methods still need to validate it.  This
validation can be done according to the PKIX rules specified in
<xref target="RFC5280"/> or by using a different trust structure, such as a trusted
distributor for self-signed CWTs.  The PKIX
validation includes matching against the trust anchors configured for
the application.  These rules apply when the validation succeeds in a
single step as well as when CWT chains need to be built.  If
the application cannot establish trust in the CWT, the public
key contained in the CWT cannot be used for cryptographic
operations.</t>

<t>The header parameters defined in this document are as follows:</t>

<t>cwt-bag:  This header parameter contains a bag of CWTs, which is unordered and
    may contain self-signed CWTs.  Note that there could be
    duplicate CWTs.  The CWT bag can contain
    CWT that are completely extraneous to the message.  (An
    example of this would be where a signed message is being used to
    transport a CWT containing a key agreement key.)  As the
    CWT are unordered, the party evaluating the signature
    will need to be capable of building the CWT path as
    necessary.  That party will also have to take into account that
    the bag may not contain the full set of CWT needed to
    build any particular chain.</t>

<figure><artwork><![CDATA[
The trust mechanism MUST process any CWT in this
parameter as untrusted input.  The presence of a self-signed
CWT in the parameter MUST NOT cause the update of the set
of trust anchors without some out-of-band confirmation.  As the
contents of this header parameter are untrusted input, the header
parameter can be in either the protected or unprotected header
bucket.  Sending the header parameter in the unprotected header
bucket allows an intermediary to remove or add CWT.

The end-entity CWT MUST be integrity protected by COSE.
This can, for example, be done by sending the header parameter in
the protected header, sending an 'cwt-bag' in the unprotected header
combined with an 'cwt-t' in the protected header, or including the
end-entity CWT in the external_aad.

This header parameter allows for a single CWT or a
bag of CWT to be carried in the message.

*  If a single CWT is conveyed, it is placed in a CBOR
    byte string.

*  If multiple CWTs are conveyed, a CBOR array of byte
    strings is used, with each CWT being in its own byte
    string.
]]></artwork></figure>

<t>cwt-chain:  This header parameter contains an ordered array of CWTs.
    The CWTs are to be ordered starting with
    the CWT containing the end-entity key followed by the
    CWT that signed it, and so on.  There is no requirement
    for the entire chain to be present in the element if there is
    reason to believe that the relying party already has, or can
    locate, the missing CWT.  This means that the relying
    party is still required to do path building but that a candidate
    path is proposed in this header parameter.</t>

<figure><artwork><![CDATA[
The trust mechanism MUST process any CWT in this
parameter as untrusted input.  The presence of a self-signed
CWT in the parameter MUST NOT cause the update of the set
of trust anchors without some out-of-band confirmation.  As the
contents of this header parameter are untrusted input, the header
parameter can be in either the protected or unprotected header
bucket.  Sending the header parameter in the unprotected header
bucket allows an intermediary to remove or add CWT.

The end-entity CWT MUST be integrity protected by COSE.
This can, for example, be done by sending the header parameter in
the protected header, sending an 'cwt-chain' in the unprotected
header combined with an 'cwt-t' in the protected header, or
including the end-entity CWT in the external_aad.

This header parameter allows for a single CWT or a
chain of CWTs to be carried in the message.

*  If a single CWT is conveyed, it is placed in a CBOR
    byte string.

*  If multiple CWTs are conveyed, a CBOR array of byte
    strings is used, with each CWT being in its own byte
    string.
]]></artwork></figure>

<t>cwt-t:  This header parameter identifies the end-entity CWT
    by a hash value (a thumbprint).  The 'cwt-t' header
    parameter is represented as an array of two elements.  The first
    element is an algorithm identifier that is an integer or a string
    containing the hash algorithm identifier corresponding to the
    Value column (integer or text string) of the algorithm registered
    in the "COSE Algorithms" registry (see <xref target="COSE-IANA"/>).  The second
    element is a binary string containing the hash value computed over the CWT.</t>

<figure><artwork><![CDATA[
As this header parameter does not provide any trust, the header
parameter can be in either a protected or unprotected header
bucket.

The identification of the end-entity CWT MUST be integrity
protected by COSE.  This can be done by sending the header
parameter in the protected header or including the end-entity
CWT in the external_aad.

The 'cwt-t' header parameter can be used alone or together with the
'cwt-bag', 'cwt-chain', or 'cwt-u' header parameters to provide
integrity protection of the end-entity CWT.

For interoperability, applications that use this header parameter
MUST support the hash algorithm 'SHA-256' but can use other hash
algorithms.  This requirement allows for different implementations
to be configured to use an interoperable algorithm, but does not
preclude the use (by prior agreement) of other algorithms.

Note: For conveying the thumbprint of a public key alone, see
{{I-D.ietf-cose-key-thumbprint}}.
]]></artwork></figure>

<t>cwt-u:  This header parameter provides the ability to identify a CWT
    by a URI <xref target="RFC3986"/>.  It contains a CBOR text string.
    The referenced resource can be any of the following media types:</t>

<figure><artwork><![CDATA[
*  application/cwt {{RFC8392}}

*  application/cwt usage=chain (see {{chain}})

When the application/cwt media type is used, the data is a
encoded according to RFC 8392.  If the parameter "usage" is
set to "chain", this sequence indicates a CWT chain.

The end-entity CWT MUST be integrity protected by COSE.
This can, for example, be done by sending the 'cwt-u' in the
unprotected or protected header combined with an 'cwt-t' in the
protected header, or including the end-entity CWT in the
external_aad.  As the end-entity CWT is integrity
protected by COSE, the URI does not need to provide any
protection.

If a retrieved CWT does not chain to an existing trust
anchor, that CWT MUST NOT be trusted unless the URI
provides integrity protection and server authentication and the
server is configured as trusted to provide new trust anchors or if
an out-of-band confirmation can be received for trusting the
retrieved CWT.  If an HTTP or Constrained Application
Protocol (CoAP) GET request is used to retrieve a CWT, a
standardized security protocol should be used. Examples of such
security protocols include TLS
{{RFC8446}}, DTLS {{RFC9147}}, or Object Security for Constrained
RESTful Environments (OSCORE) {{RFC8613}} should be used.
]]></artwork></figure>

<t>The header parameters are used in the following locations:</t>

<t>COSE_Signature and COSE_Sign1 objects:  In these objects, the
    parameters identify the CWT to be used for validating the
    signature.</t>

<t>COSE_recipient objects:  In this location, the parameters identify
    the CWT for the recipient of the message.</t>

<t>The labels assigned to each header parameter can be found in
<xref target="fig-parameters"/>.</t>

<figure title="CWT COSE Header Parameters." anchor="fig-parameters"><artwork><![CDATA[
+===========+=======+===============+==========================+
| Name      | Label | Value Type    | Description              |
+===========+=======+===============+==========================+
| cwt-bag   | TBD1  | COSE_CWT      | An unordered bag of CWTs |
+-----------+-------+---------------+--------------------------+
| cwt-chain | TBD2  | COSE_CWT      | An ordered chain of CWTs |
+-----------+-------+---------------+--------------------------+
| cwt-t     | TBD3  | COSE_CWTHash  | Hash of a CWT            |
+-----------+-------+---------------+--------------------------+
| cwt-u     | TBD4  | uri           | URI pointing to a CWT    |
+-----------+-------+---------------+--------------------------+
]]></artwork></figure>

<t>Below is an equivalent Concise Data Definition Language (CDDL)
description (see <xref target="RFC8610"/>) of the text above.</t>

<figure><artwork><![CDATA[
COSE_CWT = CWT-Messages / [ 2*CWT-Messages ]
COSE_CWTHash = [ hashAlg: (int / tstr), hashValue: bstr ]
]]></artwork></figure>

<t>The contents of "bstr" are the bytes of a CWT.</t>

</section>
<section anchor="cwts-and-static-static-ecdh"><name>CWTs and Static-Static ECDH</name>

<t>The header parameters defined in the previous section are used to
identify the recipient CWT. In this section, we define
the algorithm-specific parameters that are used for identifying or
transporting the sender's key for static-static key agreement
algorithms.</t>

<t>These attributes are defined analogously to those in the previous
section.  There is no definition for the CWT bag, as the same
parameter would be used for both the sender and recipient.</t>

<t>cwt-chain-sender:
    This header parameter contains the chain of CWT starting
    with the sender's key exchange CWT.  The structure is the
    same as 'cwt-chain'.</t>

<t>cwt-t-sender:
    This header parameter contains the hash value for the sender's key
    exchange CWT.  The structure is the same as 'cwt-t'.</t>

<t>cwt-u-sender:
    This header parameter contains a URI for the sender's key exchange
    CWT.  The structure and processing are the same as 'cwt-u'.</t>

<figure title="Static ECDH Algorithm Values." anchor="fig-static-ecdh"><artwork><![CDATA[
+==============+=====+=============+===================+===========+
|Name          |Label|Type         | Algorithm         |Description|
+==============+=====+=============+===================+===========+
|cwt-t-sender  |TBD5 |COSE_CWTHash | ECDH-SS+HKDF-256, |Thumbprint |
|              |     |             | ECDH-SS+HKDF-512, |for the    |
|              |     |             | ECDH-SS+A128KW,   |sender's   |
|              |     |             | ECDH-SS+A192KW,   |CWT        |
|              |     |             | ECDH-SS+A256KW    |           |
+--------------+-----+-------------+-------------------+-----------+
|cwt-u-sender  |TBD6 |uri          | ECDH-SS+HKDF-256, |URI for the|
|              |     |             | ECDH-SS+HKDF-512, |sender's   |
|              |     |             | ECDH-SS+A128KW,   |CWT        |
|              |     |             | ECDH-SS+A192KW,   |           |
|              |     |             | ECDH-SS+A256KW    |           |
+--------------+-----+-------------+-------------------+-----------+
|cwt-chain-    |TBD7 |COSE_CWT     | ECDH-SS+HKDF-256, |static key |
|  sender      |     |             | ECDH-SS+HKDF-512, |CWT chain  |
|              |     |             | ECDH-SS+A128KW,   |           |
|              |     |             | ECDH-SS+A192KW,   |           |
|              |     |             | ECDH-SS+A256KW    |           |
+--------------+-----+-------------+-------------------+-----------+
]]></artwork></figure>

</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>Establishing trust in a CWT is a vital part of processing.  A
major component of establishing trust is determining what the set of
trust anchors are for the process.  A new self-signed CWT
appearing on the client cannot be a trigger to modify the set of
trust anchors, because a well-defined trust-establishment process is
required.  One common way for a new trust anchor to be added to (or
removed from) a device is by doing a new firmware upgrade.</t>

<t>In constrained systems, there is a trade-off between the order of
checking the signature and checking the CWT for validity.
Validating CWTs may require that network resources be
accessed in order to get statys information or retrieve
CWTs during path building.  The resulting network access can
consume power and network bandwidth.  On the other hand, if the
CWT are validated after the signature is validated, an
oracle can potentially be built based on detecting the network
resources, which is only done if the signature validation passes.  In
any event, both the signature validation and the CWT
validation MUST be completed successfully before acting on any
requests.</t>

<t>The end-entity CWT MUST be integrity protected
by COSE.  Without proof of possession, an attacker can trick the CA
into issuing an identity-misbinding CWT with someone else's
"borrowed" public key but with a different subject.  An on-path
attacker can then perform an identity-misbinding attack by replacing
the real end-entity CWT in COSE with such an identity-
misbinding CWT.</t>

<t>End-entity CWTs contain identities that a passive on-path attacker
eavesdropping on the conversation can use to identify and track the
subject. To provide identity protection,COSE can be sent inside
another security protocol providing confidentiality. The 'cwt-t'
and 'cwt-u' header parameters are just alternative permanent
identifiers and can also be used to track the subject.</t>

<t>Before using the key in a CWT, the key MUST be checked
against the algorithm to be used, and any algorithm-specific checks
need to be made.  These checks can include validating that points are
on curves for elliptical curve algorithms and that the sizes of RSA
keys are within an acceptable range.  The use of unvalidated keys can
lead to either loss of security or excessive consumption of resources
(for example, using a 200K RSA key).</t>

<t>When processing the 'cwt-u' header parameter, the security
considerations of <xref target="RFC3986"/>, and specifically those defined in
Section 7.1 of <xref target="RFC3986"/>, also apply.</t>

<t>Protecting the integrity of the 'cwt-bag', 'cwt-chain', and 'cwt-t'
contents by placing them in the protected header bucket can help
mitigate some risks of a misbehaving CA (cf. Section 5.1 of
<xref target="RFC2634"/>).</t>

<t>The security of the algorithm used for 'cwt-t' does not affect the
security of the system, as this header parameter selects which
CWT that is already present on the system should be used, but
it does not provide any trust.</t>

</section>
<section anchor="iana-considerations"><name>IANA Considerations</name>

<section anchor="cose-header-parameters-registry"><name>COSE Header Parameters Registry</name>

<t>IANA has registered the new COSE Header parameters in <xref target="fig-parameters"/> in the
"COSE Header Parameters" registry.  The "Value Registry" field is
empty for all of the items.  For each item, the "Reference" field
points to this document.</t>

</section>
<section anchor="cose-header-algorithm-parameters-registry"><name>COSE Header Algorithm Parameters Registry</name>

<t>IANA has registered the new COSE Header Algorithm parameters in
<xref target="fig-static-ecdh"/> in the "COSE Header Algorithm Parameters" registry.
For each item, the "Reference" field points to this document.</t>

</section>
<section anchor="media-type-applicationcwt"><name>Media Type application/cwt</name>

<t>When the application/cwt media type is used, the data is a CBOR
sequence of single-entry COSE_CWT structures (encoding "bstr").  If
the parameter "usage" is set to "chain", this sequence indicates a
CWT chain.</t>

<t>The application/cwt media type is already registered by <xref target="RFC8392"/> and
this document updates the IANA entry of this media type <xref target="RFC6838"/>:</t>

<t><list style="symbols">
  <t>Type name:  application</t>
  <t>Subtype name:  cwt</t>
  <t>Required parameters:  N/A</t>
  <t>Optional parameters:  usage  <list style="symbols">
      <t>Can be absent to provide no further information about the
 intended meaning of the order in the CBOR sequence of
 CWT.</t>
      <t>Can be set to "chain" to indicate that the sequence of data
 items is to be interpreted as a CWT chain.</t>
    </list></t>
  <t>Encoding considerations:  binary</t>
  <t>Security considerations:  See the Security Considerations section of
  RFC 8392 and [TBD: This RFC].</t>
  <t>Interoperability considerations:  N/A</t>
  <t>Published specification:  RFC 8392 and [TBD: This RFC]</t>
  <t>Applications that use this media type:  Applications that employ COSE
  and use CWTs, including IoT applications and digital credentials
  in general.</t>
  <t>Fragment identifier considerations:  N/A</t>
  <t>Additional information:  <list style="symbols">
      <t>Deprecated alias names for this type:  N/A</t>
      <t>Magic number(s):  N/A</t>
      <t>File extension(s):  N/A</t>
      <t>Macintosh file type code(s):  N/A</t>
    </list></t>
  <t>Person &amp; email address to contact for further information: iesg@ietf.org</t>
  <t>Intended usage:  COMMON</t>
  <t>Restrictions on usage:  N/A</t>
  <t>Author:  COSE WG</t>
  <t>Change controller:  IESG</t>
</list></t>

<t>Provisional registration?  No
~~~</t>

</section>
</section>


  </middle>

  <back>


    <references title='Normative References' anchor="sec-normative-references">



<reference anchor="RFC2119">
  <front>
    <title>Key words for use in RFCs to Indicate Requirement Levels</title>
    <author fullname="S. Bradner" initials="S." surname="Bradner"/>
    <date month="March" year="1997"/>
    <abstract>
      <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="2119"/>
  <seriesInfo name="DOI" value="10.17487/RFC2119"/>
</reference>

<reference anchor="RFC2634">
  <front>
    <title>Enhanced Security Services for S/MIME</title>
    <author fullname="P. Hoffman" initials="P." role="editor" surname="Hoffman"/>
    <date month="June" year="1999"/>
    <abstract>
      <t>This document describes four optional security service extensions for S/MIME. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="2634"/>
  <seriesInfo name="DOI" value="10.17487/RFC2634"/>
</reference>

<reference anchor="RFC3986">
  <front>
    <title>Uniform Resource Identifier (URI): Generic Syntax</title>
    <author fullname="T. Berners-Lee" initials="T." surname="Berners-Lee"/>
    <author fullname="R. Fielding" initials="R." surname="Fielding"/>
    <author fullname="L. Masinter" initials="L." surname="Masinter"/>
    <date month="January" year="2005"/>
    <abstract>
      <t>A Uniform Resource Identifier (URI) is a compact sequence of characters that identifies an abstract or physical resource. This specification defines the generic URI syntax and a process for resolving URI references that might be in relative form, along with guidelines and security considerations for the use of URIs on the Internet. The URI syntax defines a grammar that is a superset of all valid URIs, allowing an implementation to parse the common components of a URI reference without knowing the scheme-specific requirements of every possible identifier. This specification does not define a generative grammar for URIs; that task is performed by the individual specifications of each URI scheme. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="66"/>
  <seriesInfo name="RFC" value="3986"/>
  <seriesInfo name="DOI" value="10.17487/RFC3986"/>
</reference>

<reference anchor="RFC5280">
  <front>
    <title>Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile</title>
    <author fullname="D. Cooper" initials="D." surname="Cooper"/>
    <author fullname="S. Santesson" initials="S." surname="Santesson"/>
    <author fullname="S. Farrell" initials="S." surname="Farrell"/>
    <author fullname="S. Boeyen" initials="S." surname="Boeyen"/>
    <author fullname="R. Housley" initials="R." surname="Housley"/>
    <author fullname="W. Polk" initials="W." surname="Polk"/>
    <date month="May" year="2008"/>
    <abstract>
      <t>This memo profiles the X.509 v3 certificate and X.509 v2 certificate revocation list (CRL) for use in the Internet. An overview of this approach and model is provided as an introduction. The X.509 v3 certificate format is described in detail, with additional information regarding the format and semantics of Internet name forms. Standard certificate extensions are described and two Internet-specific extensions are defined. A set of required certificate extensions is specified. The X.509 v2 CRL format is described in detail along with standard and Internet-specific extensions. An algorithm for X.509 certification path validation is described. An ASN.1 module and examples are provided in the appendices. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="5280"/>
  <seriesInfo name="DOI" value="10.17487/RFC5280"/>
</reference>

<reference anchor="RFC6838">
  <front>
    <title>Media Type Specifications and Registration Procedures</title>
    <author fullname="N. Freed" initials="N." surname="Freed"/>
    <author fullname="J. Klensin" initials="J." surname="Klensin"/>
    <author fullname="T. Hansen" initials="T." surname="Hansen"/>
    <date month="January" year="2013"/>
    <abstract>
      <t>This document defines procedures for the specification and registration of media types for use in HTTP, MIME, and other Internet protocols. This memo documents an Internet Best Current Practice.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="13"/>
  <seriesInfo name="RFC" value="6838"/>
  <seriesInfo name="DOI" value="10.17487/RFC6838"/>
</reference>

<reference anchor="RFC8392">
  <front>
    <title>CBOR Web Token (CWT)</title>
    <author fullname="M. Jones" initials="M." surname="Jones"/>
    <author fullname="E. Wahlstroem" initials="E." surname="Wahlstroem"/>
    <author fullname="S. Erdtman" initials="S." surname="Erdtman"/>
    <author fullname="H. Tschofenig" initials="H." surname="Tschofenig"/>
    <date month="May" year="2018"/>
    <abstract>
      <t>CBOR Web Token (CWT) is a compact means of representing claims to be transferred between two parties. The claims in a CWT are encoded in the Concise Binary Object Representation (CBOR), and CBOR Object Signing and Encryption (COSE) is used for added application-layer security protection. A claim is a piece of information asserted about a subject and is represented as a name/value pair consisting of a claim name and a claim value. CWT is derived from JSON Web Token (JWT) but uses CBOR rather than JSON.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8392"/>
  <seriesInfo name="DOI" value="10.17487/RFC8392"/>
</reference>

<reference anchor="RFC8610">
  <front>
    <title>Concise Data Definition Language (CDDL): A Notational Convention to Express Concise Binary Object Representation (CBOR) and JSON Data Structures</title>
    <author fullname="H. Birkholz" initials="H." surname="Birkholz"/>
    <author fullname="C. Vigano" initials="C." surname="Vigano"/>
    <author fullname="C. Bormann" initials="C." surname="Bormann"/>
    <date month="June" year="2019"/>
    <abstract>
      <t>This document proposes a notational convention to express Concise Binary Object Representation (CBOR) data structures (RFC 7049). Its main goal is to provide an easy and unambiguous way to express structures for protocol messages and data formats that use CBOR or JSON.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8610"/>
  <seriesInfo name="DOI" value="10.17487/RFC8610"/>
</reference>

<reference anchor="RFC8747">
  <front>
    <title>Proof-of-Possession Key Semantics for CBOR Web Tokens (CWTs)</title>
    <author fullname="M. Jones" initials="M." surname="Jones"/>
    <author fullname="L. Seitz" initials="L." surname="Seitz"/>
    <author fullname="G. Selander" initials="G." surname="Selander"/>
    <author fullname="S. Erdtman" initials="S." surname="Erdtman"/>
    <author fullname="H. Tschofenig" initials="H." surname="Tschofenig"/>
    <date month="March" year="2020"/>
    <abstract>
      <t>This specification describes how to declare in a CBOR Web Token (CWT) (which is defined by RFC 8392) that the presenter of the CWT possesses a particular proof-of-possession key. Being able to prove possession of a key is also sometimes described as being the holder-of-key. This specification provides equivalent functionality to "Proof-of-Possession Key Semantics for JSON Web Tokens (JWTs)" (RFC 7800) but using Concise Binary Object Representation (CBOR) and CWTs rather than JavaScript Object Notation (JSON) and JSON Web Tokens (JWTs).</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8747"/>
  <seriesInfo name="DOI" value="10.17487/RFC8747"/>
</reference>

<reference anchor="RFC8949">
  <front>
    <title>Concise Binary Object Representation (CBOR)</title>
    <author fullname="C. Bormann" initials="C." surname="Bormann"/>
    <author fullname="P. Hoffman" initials="P." surname="Hoffman"/>
    <date month="December" year="2020"/>
    <abstract>
      <t>The Concise Binary Object Representation (CBOR) is a data format whose design goals include the possibility of extremely small code size, fairly small message size, and extensibility without the need for version negotiation. These design goals make it different from earlier binary serializations such as ASN.1 and MessagePack.</t>
      <t>This document obsoletes RFC 7049, providing editorial improvements, new details, and errata fixes while keeping full compatibility with the interchange format of RFC 7049. It does not create a new version of the format.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="94"/>
  <seriesInfo name="RFC" value="8949"/>
  <seriesInfo name="DOI" value="10.17487/RFC8949"/>
</reference>




    </references>

    <references title='Informative References' anchor="sec-informative-references">



<reference anchor="RFC8446">
  <front>
    <title>The Transport Layer Security (TLS) Protocol Version 1.3</title>
    <author fullname="E. Rescorla" initials="E." surname="Rescorla"/>
    <date month="August" year="2018"/>
    <abstract>
      <t>This document specifies version 1.3 of the Transport Layer Security (TLS) protocol. TLS allows client/server applications to communicate over the Internet in a way that is designed to prevent eavesdropping, tampering, and message forgery.</t>
      <t>This document updates RFCs 5705 and 6066, and obsoletes RFCs 5077, 5246, and 6961. This document also specifies new requirements for TLS 1.2 implementations.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8446"/>
  <seriesInfo name="DOI" value="10.17487/RFC8446"/>
</reference>

<reference anchor="RFC8613">
  <front>
    <title>Object Security for Constrained RESTful Environments (OSCORE)</title>
    <author fullname="G. Selander" initials="G." surname="Selander"/>
    <author fullname="J. Mattsson" initials="J." surname="Mattsson"/>
    <author fullname="F. Palombini" initials="F." surname="Palombini"/>
    <author fullname="L. Seitz" initials="L." surname="Seitz"/>
    <date month="July" year="2019"/>
    <abstract>
      <t>This document defines Object Security for Constrained RESTful Environments (OSCORE), a method for application-layer protection of the Constrained Application Protocol (CoAP), using CBOR Object Signing and Encryption (COSE). OSCORE provides end-to-end protection between endpoints communicating using CoAP or CoAP-mappable HTTP. OSCORE is designed for constrained nodes and networks supporting a range of proxy operations, including translation between different transport protocols.</t>
      <t>Although an optional functionality of CoAP, OSCORE alters CoAP options processing and IANA registration. Therefore, this document updates RFC 7252.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8613"/>
  <seriesInfo name="DOI" value="10.17487/RFC8613"/>
</reference>

<reference anchor="RFC9147">
  <front>
    <title>The Datagram Transport Layer Security (DTLS) Protocol Version 1.3</title>
    <author fullname="E. Rescorla" initials="E." surname="Rescorla"/>
    <author fullname="H. Tschofenig" initials="H." surname="Tschofenig"/>
    <author fullname="N. Modadugu" initials="N." surname="Modadugu"/>
    <date month="April" year="2022"/>
    <abstract>
      <t>This document specifies version 1.3 of the Datagram Transport Layer Security (DTLS) protocol. DTLS 1.3 allows client/server applications to communicate over the Internet in a way that is designed to prevent eavesdropping, tampering, and message forgery.</t>
      <t>The DTLS 1.3 protocol is based on the Transport Layer Security (TLS) 1.3 protocol and provides equivalent security guarantees with the exception of order protection / non-replayability. Datagram semantics of the underlying transport are preserved by the DTLS protocol.</t>
      <t>This document obsoletes RFC 6347.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9147"/>
  <seriesInfo name="DOI" value="10.17487/RFC9147"/>
</reference>

<reference anchor="RFC9360">
  <front>
    <title>CBOR Object Signing and Encryption (COSE): Header Parameters for Carrying and Referencing X.509 Certificates</title>
    <author fullname="J. Schaad" initials="J." surname="Schaad"/>
    <date month="February" year="2023"/>
    <abstract>
      <t>The CBOR Object Signing and Encryption (COSE) message structure uses references to keys in general. For some algorithms, additional properties are defined that carry parameters relating to keys as needed. The COSE Key structure is used for transporting keys outside of COSE messages. This document extends the way that keys can be identified and transported by providing attributes that refer to or contain X.509 certificates.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9360"/>
  <seriesInfo name="DOI" value="10.17487/RFC9360"/>
</reference>


<reference anchor="I-D.ietf-cose-key-thumbprint">
   <front>
      <title>CBOR Object Signing and Encryption (COSE) Key Thumbprint</title>
      <author fullname="Kohei Isobe" initials="K." surname="Isobe">
         <organization>SECOM CO., LTD.</organization>
      </author>
      <author fullname="Hannes Tschofenig" initials="H." surname="Tschofenig">
         </author>
      <author fullname="Orie Steele" initials="O." surname="Steele">
         <organization>Transmute</organization>
      </author>
      <date day="23" month="October" year="2023"/>
      <abstract>
	 <t>   This specification defines a method for computing a hash value over a
   COSE Key. It defines which fields in a COSE Key structure are used in
   the hash computation, the method of creating a canonical form of the
   fields, and how to hash the byte sequence.  The resulting hash value
   can be used for identifying or selecting a key that is the subject of
   the thumbprint.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-cose-key-thumbprint-04"/>
   
</reference>


<reference anchor="I-D.ietf-oauth-status-list">
   <front>
      <title>OAuth Status List</title>
      <author fullname="Tobias Looker" initials="T." surname="Looker">
         <organization>MATTR</organization>
      </author>
      <author fullname="Paul Bastian" initials="P." surname="Bastian">
         </author>
      <author fullname="Christian Bormann" initials="C." surname="Bormann">
         </author>
      <date day="23" month="October" year="2023"/>
      <abstract>
	 <t>   This specification defines status list data structures for
   representing the status of JSON Web Tokens (JWTs) [RFC7519] and CBOR
   Web Tokens (CWTs) [RFC8392].  The status list data structures
   themselves are also represented as JWTs or CWTs.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-oauth-status-list-00"/>
   
</reference>


<reference anchor="I-D.mcmillion-keytrans-architecture">
   <front>
      <title>Key Transparency Architecture</title>
      <author fullname="Brendan McMillion" initials="B." surname="McMillion">
         </author>
      <date day="4" month="December" year="2023"/>
      <abstract>
	 <t>   This document defines the terminology and interaction patterns
   involved in the deployment of Key Transparency (KT) in a general
   secure group messaging infrastructure, and specifies the security
   properties that the protocol provides.  It also gives more general,
   non-prescriptive guidance on how to securely apply KT to a number of
   common applications.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-mcmillion-keytrans-architecture-01"/>
   
</reference>


<reference anchor="COSE-IANA" target="https://www.iana.org/assignments/cose/">
  <front>
    <title>CBOR Object Signing and Encryption (COSE) IANA Registry</title>
    <author >
      <organization>IANA</organization>
    </author>
    <date year="2023" month="December"/>
  </front>
</reference>


    </references>


<?line 499?>

<section anchor="acknowledgments"><name>Acknowledgments</name>

<t>We would like to thank Brendan Moran for his work on the IETF SUIT trust
domains draft, which created the idea for writing this specification.</t>

</section>


  </back>

<!-- ##markdown-source:
H4sIAAAAAAAAA+1c6W8bR5b/ToD/Q0MG1lJM0rZ8xGYQ7CiSEgs+5JWU8SwG
g0Gxu0h21Ozm9iGGiZ2/fd/vvVfV1SRlx0mwOwPEHyyyWcerd1/Vw+Gw36vT
OrPjaO/4m/OL6Hzyg43r6DKd5Wk+i0yeRKd5XK6XdVrk0f7x+eXpwTh6YU1i
y+itKc3C1rasomlRRsemLNdu1oWd2tLmMb4fz02aV1ExjXiPd3YSXRXXlh7t
H7+7qg72+r1+z0wmpb0ZR/REJ/R7SRHntMM4SkozrYd1Fc+Lqc3T2TAuKjuM
V/UwxtDhgwf9XmxqOyvK9Tiq6gQrpstyHNVlU9WHDx48f3BIe5TWjKNLGzdl
Wq/7vVVRXs/KolnStnSyfu/arulZMo7OcjpWbuvhCXbGalVNx/qnyYqc4Flb
gm6Zjvu9KCqnsU2qep2551FUF3H4Oc0Tm9f+SVWUdWmnVftgveh+r8s0bsfH
xWJB89vf0zxL82A3+2M9zNKqHtJCkyKjgcPii3v4iRC4MMslEUFHm6aeFyXg
HuJ3/CNME0VH0ZXHrvtFcP/C5LmtdvxsFybNxtGcfx+1xPnLbPHjiHDnxhXl
bHvDl7ShuTZrszDd7V7afOsXWsHk6U8GTEj0Oz0+f00EGw2iV1cnow1wiK9G
tc4fpbaeEjj0w4iwCDL2e3lRLmilG8vUu/j2+PDhw+f+89NHj93nR8+fPXWf
nxw+e+A+P3326Jn7/OzR80P/+elDP+bZl4+/9J+fP8b6aT7d3PnZ48dPg9mP
3OfnD9vZzx89lVXPhid8HuF94tRhPW8Wk2WZEm91BhSg8pAYtm4qZgz/8yJe
pFlGWMT8ujR5NTRlPE9rEvqmFLggCcOzozdHY8FsyzKemhF+lgeqPX618uCp
pB1mBFa5ljUSktxxdGJju5iQWjl8cPhIFzflzJIgzOt6WY3v31+tVqPU5GZE
QNw3VUUbsWTcB0ru93vD4TAyE1rYxCyzV3P7GZAtbFWZmYX4NYyOqKkgM6Wq
MhKCuiD+Wle8QGKnKQRjLspw2SpDGhVDF0axV3x/Gz158Jx0lC3rdJpCVVUj
gTCtomppY3kKaEiabZ7QKvhp2uQxnpqMFBYW3q1BeS2cfpEmSWbx7U4EJVYW
ScML/OujIwJ427NhWeIiv7FsWnhiFMzTRSFekWHepcnrrDBJRNpeoUpI50Q/
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
l/lEzup62IMdeCG8oOnDB71+zySQV0uFoMmPl82kDn5X6gzdGw6SgMfo5zf3
j+Tnc3fnvfMz4y/oWTrWZqgJq6Gw3aKIpk3JpjGMrcykaOo2/45/cnOZ7zYa
jttVTCVMc1dS0aMVMEQ7Pez+awHqUpddQqVo4BYE/AXeC0DiS+Wpa9veeKnC
Zi/TEC8WKpzrF+hOwtdE3yDDhHAGYGvUpZXs+i0JFF/Zcud2HVpsNP9+9c3J
WGoB9PwfCtLZRhPk9qae0vwiFn4zTuf9PeOP7yNzj27vrGw5llbaHkeqOSvW
+k46HMrISyL0Um/bQ3VWXHUbOPlNTOmME0YxMbB42pXvapa3HGSKiG9LM5P+
5LC3+jZcHCVJqnwfsK3r5fsiOkH7eCyBeJbixQwkG5XmkcAwclxejye8NjPy
g/MGb/3arw46v32L10Hwq7AQU27++hpuT11Uc9LGeBUEZBjdesE4ph4JJrHG
f8i74ZDpKbnXqpAoK64ZuB2yOI4o7pr9Bb2YeNdYyzYsjCzoY7wp7fXr8zdO
Y8hb+8SLzP2YFnvyGjV5v1r07jt9H4XUuwBOiTc5YMDZ6eV36i3epJUgPHwN
x3+i29SXlofDYTShoEa8lKP4Oi9WmU2YruyhvLNakszSa7kuTHteR9+QOUtI
IbwuyK1nPMjd6vLaeUxnp1ffRpffn125nrakWHDxjN/G6JIfMV61o7aa+Mbw
UvrSGjUcoeQQ5/0vDufufnZSAAA=

-->

</rfc>

