<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.3.24 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc rfcedstyle="yes"?>
<?rfc toc="yes"?>
<?rfc tocindent="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc strict="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc text-list-symbols="-o*+"?>
<?rfc docmapping="yes"?>
<?rfc toc_levels="4"?>

<rfc ipr="pre5378Trust200902" docName="draft-tschofenig-cose-hpke-00" category="std">

  <front>
    <title abbrev="COSE HPKE">Use of Hybrid public-key encryption (HPKE) with CBOR Object Signing and Encryption (COSE)</title>

    <author initials="H." surname="Tschofenig" fullname="Hannes Tschofenig">
      <organization>Arm Limited</organization>
      <address>
        <email>hannes.tschofenig@arm.com</email>
      </address>
    </author>
    <author initials="R." surname="Housley" fullname="Russ Housley">
      <organization abbrev="Vigil Security">Vigil Security, LLC</organization>
      <address>
        <email>housley@vigilsec.com</email>
      </address>
    </author>
    <author initials="B." surname="Moran" fullname="Brendan Moran">
      <organization>Arm Limited</organization>
      <address>
        <email>Brendan.Moran@arm.com</email>
      </address>
    </author>

    <date year="2021" month="September" day="22"/>

    <area>Security</area>
    <workgroup>SUIT</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This specification defines the hybrid public-key encryption (HPKE).</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>Hybrid public-key encryption (HPKE) <xref target="I-D.irtf-cfrg-hpke"/> is a scheme that 
provides public key encryption of arbitrary-sized plaintexts given a 
recipient’s public key. HPKE utilizes a non-interactive ephemeral-static 
Diffie-Hellman exchange to establish a shared secret, which is then used to 
encrypt plaintext.</t>

<t>HPKE <xref target="I-D.irtf-cfrg-hpke"/> defines several features and a subset are applied 
to the use with COSE.</t>

</section>
<section anchor="conventions-and-terminology" title="Conventions and Terminology">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”,
“SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”, “MAY”, and “OPTIONAL” in this
document are to be interpreted as described in BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/>
when, and only when, they appear in all capitals, as shown here.</t>

<t>This specification uses the following abbreviations:</t>

<t><list style="symbols">
  <t>Key-encryption key / key-encrypting key (KEK), a term defined in RFC 4949 <xref target="RFC4949"/>.</t>
  <t>Content-encryption key (CEK), a term defined in RFC 2630 <xref target="RFC2630"/>.</t>
  <t>Hybrid Public Key Encryption (HPKE), defined in <xref target="I-D.irtf-cfrg-hpke"/>.</t>
</list></t>

</section>
<section anchor="hpke-for-cose" title="HPKE for COSE">

<t>HPKE, when used with COSE, follows a three layer structure:</t>

<t><list style="symbols">
  <t>Layer 0 contains content encrypted with the CEK. 
The content may be detached.</t>
  <t>Layer 1 includes the encrypted content encryption key.</t>
  <t>Layer 2 contains parameters needed for HPKE to generate 
the layer 1 key and to encrypt it.</t>
</list></t>

<t>The CDDL for the COSE_Encrypt structure, as used with HPKE,
is shown in <xref target="cddl-hpke"/>.</t>

<figure title="CDDL for HPKE-based COSE_Encrypt Structure" anchor="cddl-hpke"><artwork><![CDATA[
COSE_Encrypt_Tagged = #6.96(COSE_Encrypt)
 
SUIT_Encryption_Info = COSE_Encrypt_Tagged

COSE_Encrypt = [
  Headers,
  ciphertext : bstr / nil,
  recipients : [+COSE_recipient_outer]
]
   
COSE_recipient_outer = [
  protected   : bstr .size 0,
  unprotected : header_map, ; must contain alg
  ciphertext  : bstr        ; CEK encrypted based on HPKE algo
  recipients  : [ + COSE_recipient_inner ]  
]

COSE_recipient_inner = [
  protected   : bstr .cbor header_map, ; must contain HPKE alg
  unprotected : header_map, ; must contain kid and ephemeral public key
  ciphertext  : null;
  recipients  : null
]

header_map = {
  Generic_Headers,
  * label =values,
}
]]></artwork></figure>

<t>The COSE_Encrypt structure in <xref target="cddl-hpke"/> requires the 
encrypted CEK and the ephemeral public key of the sender to be
generated. This is accomplished with the HPKE encryption function as 
illustrated in <xref target="hpke-encryption"/>.</t>

<figure anchor="hpke-encryption"><artwork><![CDATA[
    CEK = random()
    pkR = DeserializePublicKey(recipient_public_key)
    info = "cose hpke" || 0x00 || COSE_KDF_Context
    enc, context = SetupBaseS(pkR, info)
    ciphertext = context.Seal(null, CEK)
]]></artwork></figure>

<t>Legend:</t>

<t><list style="symbols">
  <t>The functions DeserializePublicKey(), SetupBaseS() and Seal() are 
defined in HPKE <xref target="I-D.irtf-cfrg-hpke"/>.</t>
  <t>CEK is a random byte sequence of keysize length whereby keysize 
corresponds to the size of the indicated symmetric encryption algorithm. 
For example, AES-128-GCM requires a 16 byte key. The CEK would therefore 
be 16 bytes long.</t>
  <t>‘recipient_public_key’ represents the public key of the recipient.</t>
  <t>‘info’ is a data structure described below used as input to the key 
derivation internal to the HPKE algorithm. In addition to the constant 
prefix, the COSE_KDF_Context structure is used. The COSE_KDF_Context is 
shown in <xref target="cddl-cose-kdf"/>.</t>
</list></t>

<t>The result of the above-described operation is the encrypted CEK (denoted 
as ciphertext) and the enc - the HPKE encapsulated key (i.e., the ephemeral 
ECDH public key of the sender).</t>

<figure title="COSE_KDF_Context Data Structure" anchor="cddl-cose-kdf"><artwork><![CDATA[
PartyInfo = (
   identity : bstr,
   nonce : nil,
   other : nil
)

COSE_KDF_Context = [
   AlgorithmID : int,
   PartyUInfo : [ PartyInfo ],
   PartyVInfo : [ PartyInfo ],
   SuppPubInfo : [
       keyDataLength : uint,
       protected : empty_or_serialized_map
   ],
]
]]></artwork></figure>

<t>Notes:</t>

<t><list style="symbols">
  <t>PartyUInfo.identity corresponds to the kid found in the 
COSE_Sign_Tagged or COSE_Sign1_Tagged structure (when a digital 
signature is used). When utilizing a MAC, then the kid is found in 
the COSE_Mac_Tagged or COSE_Mac0_Tagged structure.</t>
  <t>PartyVInfo.identity corresponds to the kid used for the respective 
recipient from the inner-most recipients array.</t>
  <t>The value in the AlgorithmID field corresponds to the alg parameter 
in the protected structure in the inner-most recipients array.</t>
  <t>keyDataLength is set to the number of bits of the desired output value.</t>
  <t>protected refers to the protected structure of the inner-most array.</t>
</list></t>

<t>The recipient decrypts the encrypted CEK, using two input parameters:</t>

<t><list style="symbols">
  <t>the private key skR corresponding to the public key pkR used by the sender.</t>
  <t>the HPKE encapsulated key (i.e., ephemeral ECDH public key) created by the 
sender.</t>
</list></t>

<t>If the HPKE operation is successful, the recipient obtains the CEK and can decrypt the 
plaintext.</t>

<t><xref target="hpke-decryption"/> shows the HPKE computations performed by the recipient for decryption.</t>

<figure anchor="hpke-decryption"><artwork><![CDATA[
    info = "cose hpke" || 0x00 || COSE_KDF_Context
    context = SetupBaseR(ciphertext, skR, info)
    CEK = context.Open(null, ciphertext)
]]></artwork></figure>

</section>
<section anchor="example" title="Example">

<t>An example of the COSE_Encrypt structure using the HPKE scheme is 
shown in <xref target="hpke-example"/>. It uses the following algorithm 
combination:</t>

<t><list style="symbols">
  <t>AES-GCM-128 for encryption of detached ciphertext.</t>
  <t>AES-GCM-128 for encryption of the CEK.</t>
  <t>Key Encapsulation Mechanism (KEM): NIST P-256</t>
  <t>Key Derivation Function (KDF): HKDF-SHA256</t>
</list></t>

<figure title="COSE_Encrypt Example for HPKE" anchor="hpke-example"><artwork><![CDATA[
96( 
    [
        // protected field with alg=AES-GCM-128
        h'A10101',   
        {    // unprotected field with iv
             5: h'26682306D4FB28CA01B43B80'
        }, 
        // null because of detached ciphertext
        null,  
        [  // COSE_recipient_outer
            h'',          // empty protected field
            {             // unprotected field with ... 
                 1: 1     //     alg=A128GCM
            },
            // Encrypted CEK
            h'FA55A50CF110908DA6443149F2C2062011A7D8333A72721A',
            / recipients / [  // COSE_recipient_inner
             [
               / protected / h'a1013818' / {
                   \ alg \ 1:TBD1 \ HPKE/P-256+HKDF-256 \
                 } / ,
               / unprotected / {
                 // HPKE encapsulated key
                 / ephemeral / -1:{
                   / kty / 1:2,
                   / crv / -1:1,
                   / x / -2:h'98f50a4ff6c05861c8...90bbf91d6280',
                   / y / -3:true
                 },
                 // kid for recipient static ECDH public key
                 / kid / 4:'meriadoc.brandybuck@buckland.example'
               },
               // empty ciphertext
               / ciphertext / h''
             ]
            ]
        ]
     ]
)
]]></artwork></figure>

</section>
<section anchor="sec-cons" title="Security Considerations">

<t>HPKE assumes that the sender is in possession of the public key of the recipient. 
Since the CEK is randomly generated it must be ensured that the guidelines for random number generations are followed, see <xref target="RFC8937"/>.</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<t>This document requests IANA to create new entries in the COSE Algorithms
registry established with <xref target="I-D.ietf-cose-rfc8152bis-algs"/>.</t>

<figure><artwork><![CDATA[
+-------------+-------+---------+------------+--------+---------------+  
| Name        | Value | KDF     | Ephemeral- | Key    | Description   |
|             |       |         | Static     | Wrap   |               |
+-------------+-------+---------+------------+--------+---------------+
| HPKE/P-256+ | TBD1  | HKDF -  | yes        | none   | HPKE with     |
| HKDF-256    |       | SHA-256 |            |        | ECDH-ES       |
|             |       |         |            |        | (P-256) +     |
|             |       |         |            |        | HKDF-256      |
+-------------+-------+---------+------------+--------+---------------+
| HPKE/P-384+ | TBD2  | HKDF -  | yes        | none   | HPKE with     |
| HKDF-SHA384 |       | SHA-384 |            |        | ECDH-ES       |
|             |       |         |            |        | (P-384) +     |
|             |       |         |            |        | HKDF-384      |
+-------------+-------+---------+------------+--------+---------------+
| HPKE/P-521+ | TBD3  | HKDF -  | yes        | none   | HPKE with     |
| HKDF-SHA521 |       | SHA-521 |            |        | ECDH-ES       |
|             |       |         |            |        | (P-521) +     |
|             |       |         |            |        | HKDF-521      |
+-------------+-------+---------+------------+--------+---------------+
| HPKE        | TBD4  | HKDF -  | yes        | none   | HPKE with     |
| X25519 +    |       | SHA-256 |            |        | ECDH-ES       |
| HKDF-SHA256 |       |         |            |        | (X25519) +    |
|             |       |         |            |        | HKDF-256      |
+-------------+-------+---------+------------+--------+---------------+
| HPKE        | TBD4  | HKDF -  | yes        | none   | HPKE with     |
| X448 +      |       | SHA-512 |            |        | ECDH-ES       |
| HKDF-SHA512 |       |         |            |        | (X448) +      |
|             |       |         |            |        | HKDF-512      |
+-------------+-------+---------+------------+--------+---------------+
]]></artwork></figure>

</section>


  </middle>

  <back>

    <references title='Normative References'>





<reference  anchor="RFC2119" target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='S. Bradner'><organization /></author>
<date year='1997' month='March' />
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference  anchor="RFC8174" target='https://www.rfc-editor.org/info/rfc8174'>
<front>
<title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
<author initials='B.' surname='Leiba' fullname='B. Leiba'><organization /></author>
<date year='2017' month='May' />
<abstract><t>RFC 2119 specifies common key words that may be used in protocol  specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the  defined special meanings.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='8174'/>
<seriesInfo name='DOI' value='10.17487/RFC8174'/>
</reference>


<reference anchor="I-D.irtf-cfrg-hpke">
   <front>
      <title>Hybrid Public Key Encryption</title>
      <author fullname="Richard L. Barnes">
	 <organization>Cisco</organization>
      </author>
      <author fullname="Karthik Bhargavan">
	 <organization>Inria</organization>
      </author>
      <author fullname="Benjamin Lipp">
	 <organization>Inria</organization>
      </author>
      <author fullname="Christopher A. Wood">
	 <organization>Cloudflare</organization>
      </author>
      <date month="September" day="2" year="2021" />
      <abstract>
	 <t>   This document describes a scheme for hybrid public-key encryption
   (HPKE).  This scheme provides a variant of public-key encryption of
   arbitrary-sized plaintexts for a recipient public key.  It also
   includes three authenticated variants, including one which
   authenticates possession of a pre-shared key, and two optional ones
   which authenticate possession of a KEM private key.  HPKE works for
   any combination of an asymmetric key encapsulation mechanism (KEM),
   key derivation function (KDF), and authenticated encryption with
   additional data (AEAD) encryption function.  Some authenticated
   variants may not be supported by all KEMs.  We provide instantiations
   of the scheme using widely used and efficient primitives, such as
   Elliptic Curve Diffie-Hellman key agreement, HKDF, and SHA2.

   This document is a product of the Crypto Forum Research Group (CFRG)
   in the IRTF.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-irtf-cfrg-hpke-12" />
   <format type="TXT" target="https://www.ietf.org/archive/id/draft-irtf-cfrg-hpke-12.txt" />
</reference>


<reference anchor="I-D.ietf-cose-rfc8152bis-algs">
   <front>
      <title>CBOR Object Signing and Encryption (COSE): Initial Algorithms</title>
      <author fullname="Jim Schaad">
	 <organization>August Cellars</organization>
      </author>
      <date month="September" day="24" year="2020" />
      <abstract>
	 <t>   Concise Binary Object Representation (CBOR) is a data format designed
   for small code size and small message size.  There is a need for the
   ability to have basic security services defined for this data format.
   THis document defines a set of algorithms that can be used with the
   CBOR Object Signing and Encryption (COSE) protocol RFC XXXX.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-ietf-cose-rfc8152bis-algs-12" />
   <format type="TXT" target="https://www.ietf.org/archive/id/draft-ietf-cose-rfc8152bis-algs-12.txt" />
</reference>




    </references>

    <references title='Informative References'>





<reference  anchor="RFC8937" target='https://www.rfc-editor.org/info/rfc8937'>
<front>
<title>Randomness Improvements for Security Protocols</title>
<author initials='C.' surname='Cremers' fullname='C. Cremers'><organization /></author>
<author initials='L.' surname='Garratt' fullname='L. Garratt'><organization /></author>
<author initials='S.' surname='Smyshlyaev' fullname='S. Smyshlyaev'><organization /></author>
<author initials='N.' surname='Sullivan' fullname='N. Sullivan'><organization /></author>
<author initials='C.' surname='Wood' fullname='C. Wood'><organization /></author>
<date year='2020' month='October' />
<abstract><t>Randomness is a crucial ingredient for Transport Layer Security (TLS) and related security protocols.  Weak or predictable &quot;cryptographically secure&quot; pseudorandom number generators (CSPRNGs) can be abused or exploited for malicious purposes. An initial entropy source that seeds a CSPRNG might be weak or broken as well, which can also lead to critical and systemic security problems. This document describes a way for security protocol implementations to augment their CSPRNGs using long-term private keys. This improves randomness from broken or otherwise subverted CSPRNGs.</t><t>This document is a product of the Crypto Forum Research Group (CFRG) in the IRTF.</t></abstract>
</front>
<seriesInfo name='RFC' value='8937'/>
<seriesInfo name='DOI' value='10.17487/RFC8937'/>
</reference>



<reference  anchor="RFC4949" target='https://www.rfc-editor.org/info/rfc4949'>
<front>
<title>Internet Security Glossary, Version 2</title>
<author initials='R.' surname='Shirey' fullname='R. Shirey'><organization /></author>
<date year='2007' month='August' />
<abstract><t>This Glossary provides definitions, abbreviations, and explanations of terminology for information system security. The 334 pages of entries offer recommendations to improve the comprehensibility of written material that is generated in the Internet Standards Process (RFC 2026). The recommendations follow the principles that such writing should (a) use the same term or definition whenever the same concept is mentioned; (b) use terms in their plainest, dictionary sense; (c) use terms that are already well-established in open publications; and (d) avoid terms that either favor a particular vendor or favor a particular technology or mechanism over other, competing techniques that already exist or could be developed.  This memo provides information for the Internet community.</t></abstract>
</front>
<seriesInfo name='FYI' value='36'/>
<seriesInfo name='RFC' value='4949'/>
<seriesInfo name='DOI' value='10.17487/RFC4949'/>
</reference>



<reference  anchor="RFC2630" target='https://www.rfc-editor.org/info/rfc2630'>
<front>
<title>Cryptographic Message Syntax</title>
<author initials='R.' surname='Housley' fullname='R. Housley'><organization /></author>
<date year='1999' month='June' />
<abstract><t>This document describes the Cryptographic Message Syntax.  This syntax is used to digitally sign, digest, authenticate, or encrypt arbitrary messages.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='2630'/>
<seriesInfo name='DOI' value='10.17487/RFC2630'/>
</reference>




    </references>


<section anchor="acknowledgements" title="Acknowledgements">

<t>TBD: Add your name here.</t>

</section>


  </back>

<!-- ##markdown-source:
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
R/MjDAsO7cNfXpafjJgTKWqKjaPThAtJh54qmdMp1MV2X7w6G12J105nbz9f
MCzbppN8G7IFa2PyKb6c0emAZ9PWlY1zsL8ltEXLoil2dqzEobMi73YAyQtL
gXLBbHPQbuFvs8F7/Xz4kyFm72Etcuq2nMqfPWxwNzv7+73Obmt/2D057PSO
Bq32YXf3sNfaLCffN8SKsOR5aCk9N9Mv6dagX87XbmoReM801p1PrIo322T1
SrbcMlSRWl3zaUW/x6FoNpuiAgZ92n3RzlfShw0A5GGA1dn3jdV7zD+203VV
k5PB3t5gr3V00m63Dlq94WC/291tdw9OOked1n6n1W4Png17u7u7g2edZ532
YLNK3y5rO+sh5AJTUer9AyVtV9uBZC7caLfX7m3i7tMaSIT4jevxbwDn6nDY
xgXF+g6HwVN2clyI39YsvQfJxhoBbJusZwrl1haedVOtKrQjnHZ/vRI74ial
I+Z2v/NQJD3Bi281hfZjMz7S805/tnnQm+y13O5ksu+19nr7ba8HhzpojceT
g7a/30HwPEaCZHB2+8igch1i65YBDN2SxlZBMi9qKnV3LT60eEd0+5tz6rT9
yGuOaY+9HGfezc/0L8Bd0+TnzQck1shUxOK6eC/xLE8syNGqlD+s3lu3+eUH
3txUjjRMXbI3AXldMhWsOO/KK1v+qpXeDCRogGNT7z89SaTn0N71vngd5SZJ
Nufa5Kb2IRUdSIViESUoXIlVPb6yQR8p2rrlTQuI6NONYFkcfKO1T/XB4pha
viSjjrPgPs0gb8Bvwtj++mzEtKuGhH6nFee1VProHqQ0b3sOdp8VryDE2eDV
oAJC8RqneMdERxwyQZrh2egYdSsnQnkH+dJYySTvuvkHFEVHn9AeYarQHSzL
d4T5wZ05/HnsNbB9KvfUsT9PK9/2lX2zugr3VHI+i1fokXO/+ize8Vbks0DW
MiPHxatPGoYVeXTIRwi6TcA9EbI/nyvfdDXSAalvfo3dxcpzM+u7KUcSWWkY
nDg345sysnDoaglDFeKFUSj5gr2cTSJy1YokvqIaWhceXFHic3lBqcc5HpWq
fR2j9YS2WIdt8fRbCdl6/CCwd3tdA3bnW8AGtqBUAdse+ZFgg8/3AptE/nFg
73XaBuzdbwQblCpg2yM/Emzw+V5gk8g/COySE8Du/k2w/9XZ22sfaGW/KY1Y
O6f/BWzN36D9f5xGvg/Y3W7P+FXVs9udvwO2veyvgA3+24UA3+rZ4P3dwUYv
IfKfco1d70b3QAPvJozuAulPJf/Qkfufw2FfDHxfLKMs5l/S6Z+4iNp/ARst
fTGRKgAA

-->

</rfc>

