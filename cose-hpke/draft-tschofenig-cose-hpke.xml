<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.3.24 -->

<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
]>

<?rfc rfcedstyle="yes"?>
<?rfc toc="yes"?>
<?rfc tocindent="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<?rfc strict="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc text-list-symbols="-o*+"?>
<?rfc docmapping="yes"?>
<?rfc toc_levels="4"?>

<rfc ipr="pre5378Trust200902" docName="draft-tschofenig-cose-hpke-00" category="std">

  <front>
    <title abbrev="COSE HPKE">Use of Hybrid Public-Key Encryption (HPKE) with CBOR Object Signing and Encryption (COSE)</title>

    <author initials="H." surname="Tschofenig" fullname="Hannes Tschofenig">
      <organization>Arm Limited</organization>
      <address>
        <email>hannes.tschofenig@arm.com</email>
      </address>
    </author>
    <author initials="R." surname="Housley" fullname="Russ Housley">
      <organization abbrev="Vigil Security">Vigil Security, LLC</organization>
      <address>
        <email>housley@vigilsec.com</email>
      </address>
    </author>
    <author initials="B." surname="Moran" fullname="Brendan Moran">
      <organization>Arm Limited</organization>
      <address>
        <email>Brendan.Moran@arm.com</email>
      </address>
    </author>

    <date year="2021" month="October" day="18"/>

    <area>Security</area>
    <workgroup>COSE</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<t>This specification defines hybrid public-key encryption (HPKE) for use with 
CBOR Object Signing and Encryption (COSE).</t>



    </abstract>


  </front>

  <middle>


<section anchor="introduction" title="Introduction">

<t>Hybrid public-key encryption (HPKE) <xref target="I-D.irtf-cfrg-hpke"/> is a scheme that 
provides public key encryption of arbitrary-sized plaintexts given a 
recipient’s public key. HPKE utilizes a non-interactive ephemeral-static 
Diffie-Hellman exchange to establish a shared secret, which is then used to 
encrypt plaintext.</t>

<t>The HPKE specification defines several features for use with public key encryption 
and a subset of those features is applied to COSE <xref target="RFC8152"/>.</t>

</section>
<section anchor="conventions-and-terminology" title="Conventions and Terminology">

<t>The key words “MUST”, “MUST NOT”, “REQUIRED”, “SHALL”, “SHALL NOT”, “SHOULD”,
“SHOULD NOT”, “RECOMMENDED”, “NOT RECOMMENDED”, “MAY”, and “OPTIONAL” in this
document are to be interpreted as described in BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/>
when, and only when, they appear in all capitals, as shown here.</t>

<t>This specification uses the following abbreviations:</t>

<t><list style="symbols">
  <t>Key-encryption key (KEK), a term defined in RFC 4949 <xref target="RFC4949"/>.</t>
  <t>Content-encryption key (CEK), a term defined in RFC 2630 <xref target="RFC2630"/>.</t>
  <t>Hybrid Public Key Encryption (HPKE) is defined in <xref target="I-D.irtf-cfrg-hpke"/>.</t>
</list></t>

</section>
<section anchor="hpke-for-cose" title="HPKE for COSE">

<t>HPKE, when used with COSE, follows a three layer structure:</t>

<t><list style="symbols">
  <t>Layer 0 (corresponding to the COSE_Encrypt structure) contains content encrypted 
with the CEK. This ciphertext may be detached. If not detached, then it is included.</t>
  <t>Layer 1 (see COSE_recipient_outer structure) includes the encrypted CEK.</t>
  <t>Layer 2 (in the COSE_recipient_inner structure) contains parameters needed for 
HPKE to generate the layer 1 key and to encrypt it.</t>
</list></t>

<t>The CDDL for the COSE_Encrypt structure, as used with HPKE,
is shown in <xref target="cddl-hpke"/>.</t>

<figure title="CDDL for HPKE-based COSE_Encrypt Structure" anchor="cddl-hpke"><artwork><![CDATA[
COSE_Encrypt_Tagged = #6.96(COSE_Encrypt)
 
SUIT_Encryption_Info = COSE_Encrypt_Tagged

; Layer 0
COSE_Encrypt = [
  Headers,
  ciphertext : bstr / nil,
  recipients : [+COSE_recipient_outer]
]

; Layer 1   
COSE_recipient_outer = [
  protected   : bstr .size 0,
  unprotected : header_map, ; must contain alg
  encCEK      : bstr,       ; CEK encrypted based on HPKE algo
  recipients  : [ + COSE_recipient_inner ]  
]

; Layer 2
COSE_recipient_inner = [
  protected   : bstr .cbor header_map, ; must contain HPKE alg
  unprotected : header_map, ; must contain kid and ephemeral public key
  empty       : null,
  empty       : null
]

header_map = {
  Generic_Headers,
  * label =values,
}
]]></artwork></figure>

<t>The COSE_recipient_outer structure shown in <xref target="cddl-hpke"/> includes the 
encrypted CEK (in the encCEK structure). The COSE_recipient_inner structure, 
also shown in <xref target="cddl-hpke"/>, contains the ephemeral public key of the sender 
(in the unprotected structure). To generate these two data structures, 
the HPKE encryption functions shown in <xref target="hpke-encryption"/> are used.</t>

<figure title="HPKE-based Encryption" anchor="hpke-encryption"><artwork><![CDATA[
    CEK = random()
    pkR = DeserializePublicKey(recipient_public_key)
    info = "cose hpke" || 0x00 || COSE_KDF_Context
    enc, context = SetupBaseS(pkR, info)
    encCEK = context.Seal(null, CEK)
]]></artwork></figure>

<t>Legend:</t>

<t><list style="symbols">
  <t>The functions DeserializePublicKey(), SetupBaseS() and Seal() are 
defined in HPKE <xref target="I-D.irtf-cfrg-hpke"/>.</t>
  <t>CEK is a random byte sequence of keysize length whereby keysize 
corresponds to the size of the indicated symmetric encryption algorithm. 
For example, AES-128-GCM requires a 16 byte key and the CEK would therefore 
be 16 bytes long.</t>
  <t>‘recipient_public_key’ represents the public key of the recipient.</t>
  <t>‘info’ is a data structure used as input to the key derivation 
operation internal to the HPKE algorithm. The ‘COSE_KDF_Context’ 
structure is detailed in <xref target="cddl-cose-kdf"/>.</t>
</list></t>

<t>The result of the above-described operation is the encrypted CEK (referred
to as encCEK in <xref target="hpke-encryption"/>) and the HPKE encapsulated key 
(i.e., the ephemeral ECDH public key of the sender in variable ‘enc’).</t>

<t>This specification re-uses the context information structure defined in 
<xref target="RFC8152"/> for use with the HPKE algorithm inside the info structure, 
which is repeated in <xref target="cddl-cose-kdf "/> for easier readability.</t>

<figure title="COSE_KDF_Context Data Structure" anchor="cddl-cose-kdf"><artwork><![CDATA[
   PartyInfo = (
       identity : bstr / nil,
       nonce : bstr / int / nil,
       other : bstr / nil
   )

   COSE_KDF_Context = [
       AlgorithmID : int / tstr,
       PartyUInfo : [ PartyInfo ],
       PartyVInfo : [ PartyInfo ],
       SuppPubInfo : [
           keyDataLength : uint,
           protected : empty_or_serialized_map,
           ? other : bstr
       ],
       ? SuppPrivInfo : bstr
   ]
]]></artwork></figure>

<t>Since this specification may be used in a number of different 
deployment environments some flexibility is provided regarding 
how the fields in the COSE_KDF_Context data structure.</t>

<t>For better interopability, the following recommended settings 
are provided:</t>

<t><list style="symbols">
  <t>PartyUInfo.identity corresponds to the kid found in the 
COSE_Sign_Tagged or COSE_Sign1_Tagged structure (when a digital 
signature is used). When utilizing a MAC, then the kid is found in 
the COSE_Mac_Tagged or COSE_Mac0_Tagged structure.</t>
  <t>PartyVInfo.identity corresponds to the kid used for the respective 
recipient from the inner-most recipients array.</t>
  <t>The value in the AlgorithmID field corresponds to the alg parameter 
in the protected structure in the inner-most recipients array.</t>
  <t>keyDataLength is set to the number of bits of the desired output value.</t>
  <t>protected refers to the protected structure of the inner-most array.</t>
</list></t>

<t>The recipient decrypts the encrypted CEK using two input parameters:</t>

<t><list style="symbols">
  <t>the private key skR corresponding to the public key pkR used by the sender.</t>
  <t>the HPKE encapsulated key (i.e., ephemeral ECDH public key) created by the 
sender.</t>
</list></t>

<t>If the HPKE operation is successful, the recipient obtains the CEK and can decrypt the 
plaintext.</t>

<t><xref target="hpke-decryption"/> shows the HPKE computations performed by the recipient for decryption.</t>

<figure anchor="hpke-decryption"><artwork><![CDATA[
    info = "cose hpke" || 0x00 || COSE_KDF_Context
    context = SetupBaseR(ciphertext, skR, info)
    CEK = context.Open(null, ciphertext)
]]></artwork></figure>

</section>
<section anchor="example" title="Example">

<t>An example of the COSE_Encrypt structure using the HPKE scheme is 
shown in <xref target="hpke-example"/>. It uses the following algorithm 
combination:</t>

<t><list style="symbols">
  <t>AES-GCM-128 for encryption of detached ciphertext.</t>
  <t>AES-GCM-128 for encryption of the CEK.</t>
  <t>Key Encapsulation Mechanism (KEM): NIST P-256</t>
  <t>Key Derivation Function (KDF): HKDF-SHA256</t>
</list></t>

<figure title="COSE_Encrypt Example for HPKE" anchor="hpke-example"><artwork><![CDATA[
96( 
    [
        // protected field with alg=AES-GCM-128
        h'A10101',   
        {    // unprotected field with iv
             5: h'26682306D4FB28CA01B43B80'
        }, 
        // null because of detached ciphertext
        null,  
        [  // COSE_recipient_outer
            h'',          // empty protected field
            {             // unprotected field with ... 
                 1: 1     //     alg=A128GCM
            },
            // Encrypted CEK
            h'FA55A50CF110908DA6443149F2C2062011A7D8333A72721A',
            / recipients / [  // COSE_recipient_inner
             [
               / protected / h'a1013818' / {
                   \ alg \ 1:TBD1 \ HPKE/P-256+HKDF-256 \
                 } / ,
               / unprotected / {
                 // HPKE encapsulated key
                 / ephemeral / -1:{
                   / kty / 1:2,
                   / crv / -1:1,
                   / x / -2:h'98f50a4ff6c05861c8...90bbf91d6280',
                   / y / -3:true
                 },
                 // kid for recipient static ECDH public key
                 / kid / 4:'meriadoc.brandybuck@buckland.example'
               },
               // empty ciphertext
               / ciphertext / h''
             ]
            ]
        ]
     ]
)
]]></artwork></figure>

</section>
<section anchor="sec-cons" title="Security Considerations">

<t>This specification is based on HPKE and the security considerations of HPKE 
<xref target="I-D.irtf-cfrg-hpke"/> are therefore applicable also to this specification.</t>

<t>HPKE assumes that the sender is in possession of the public key of the recipient. 
A system using HPKE COSE has to assume the same assumptions and public key distribution
mechanism is assumed to exist.</t>

<t>Since the CEK is randomly generated it must be ensured that the guidelines for 
random number generations are followed, see <xref target="RFC8937"/>.</t>

</section>
<section anchor="iana-considerations" title="IANA Considerations">

<t>This document requests IANA to create new entries in the COSE Algorithms
registry established with <xref target="RFC8152"/>.</t>

<figure><artwork><![CDATA[
+-------------+-------+---------+------------+--------+---------------+  
| Name        | Value | KDF     | Ephemeral- | Key    | Description   |
|             |       |         | Static     | Wrap   |               |
+-------------+-------+---------+------------+--------+---------------+
| HPKE/P-256+ | TBD1  | HKDF -  | yes        | none   | HPKE with     |
| HKDF-256    |       | SHA-256 |            |        | ECDH-ES       |
|             |       |         |            |        | (P-256) +     |
|             |       |         |            |        | HKDF-256      |
+-------------+-------+---------+------------+--------+---------------+
| HPKE/P-384+ | TBD2  | HKDF -  | yes        | none   | HPKE with     |
| HKDF-SHA384 |       | SHA-384 |            |        | ECDH-ES       |
|             |       |         |            |        | (P-384) +     |
|             |       |         |            |        | HKDF-384      |
+-------------+-------+---------+------------+--------+---------------+
| HPKE/P-521+ | TBD3  | HKDF -  | yes        | none   | HPKE with     |
| HKDF-SHA521 |       | SHA-521 |            |        | ECDH-ES       |
|             |       |         |            |        | (P-521) +     |
|             |       |         |            |        | HKDF-521      |
+-------------+-------+---------+------------+--------+---------------+
| HPKE        | TBD4  | HKDF -  | yes        | none   | HPKE with     |
| X25519 +    |       | SHA-256 |            |        | ECDH-ES       |
| HKDF-SHA256 |       |         |            |        | (X25519) +    |
|             |       |         |            |        | HKDF-256      |
+-------------+-------+---------+------------+--------+---------------+
| HPKE        | TBD4  | HKDF -  | yes        | none   | HPKE with     |
| X448 +      |       | SHA-512 |            |        | ECDH-ES       |
| HKDF-SHA512 |       |         |            |        | (X448) +      |
|             |       |         |            |        | HKDF-512      |
+-------------+-------+---------+------------+--------+---------------+
]]></artwork></figure>

</section>


  </middle>

  <back>

    <references title='Normative References'>





<reference  anchor="RFC2119" target='https://www.rfc-editor.org/info/rfc2119'>
<front>
<title>Key words for use in RFCs to Indicate Requirement Levels</title>
<author initials='S.' surname='Bradner' fullname='S. Bradner'><organization /></author>
<date year='1997' month='March' />
<abstract><t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='2119'/>
<seriesInfo name='DOI' value='10.17487/RFC2119'/>
</reference>



<reference  anchor="RFC8174" target='https://www.rfc-editor.org/info/rfc8174'>
<front>
<title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
<author initials='B.' surname='Leiba' fullname='B. Leiba'><organization /></author>
<date year='2017' month='May' />
<abstract><t>RFC 2119 specifies common key words that may be used in protocol  specifications.  This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the  defined special meanings.</t></abstract>
</front>
<seriesInfo name='BCP' value='14'/>
<seriesInfo name='RFC' value='8174'/>
<seriesInfo name='DOI' value='10.17487/RFC8174'/>
</reference>


<reference anchor="I-D.irtf-cfrg-hpke">
   <front>
      <title>Hybrid Public Key Encryption</title>
      <author fullname="Richard L. Barnes">
	 <organization>Cisco</organization>
      </author>
      <author fullname="Karthik Bhargavan">
	 <organization>Inria</organization>
      </author>
      <author fullname="Benjamin Lipp">
	 <organization>Inria</organization>
      </author>
      <author fullname="Christopher A. Wood">
	 <organization>Cloudflare</organization>
      </author>
      <date month="September" day="2" year="2021" />
      <abstract>
	 <t>   This document describes a scheme for hybrid public-key encryption
   (HPKE).  This scheme provides a variant of public-key encryption of
   arbitrary-sized plaintexts for a recipient public key.  It also
   includes three authenticated variants, including one which
   authenticates possession of a pre-shared key, and two optional ones
   which authenticate possession of a KEM private key.  HPKE works for
   any combination of an asymmetric key encapsulation mechanism (KEM),
   key derivation function (KDF), and authenticated encryption with
   additional data (AEAD) encryption function.  Some authenticated
   variants may not be supported by all KEMs.  We provide instantiations
   of the scheme using widely used and efficient primitives, such as
   Elliptic Curve Diffie-Hellman key agreement, HKDF, and SHA2.

   This document is a product of the Crypto Forum Research Group (CFRG)
   in the IRTF.

	 </t>
      </abstract>
   </front>
   <seriesInfo name="Internet-Draft" value="draft-irtf-cfrg-hpke-12" />
   <format type="TXT" target="https://www.ietf.org/archive/id/draft-irtf-cfrg-hpke-12.txt" />
</reference>



<reference  anchor="RFC8152" target='https://www.rfc-editor.org/info/rfc8152'>
<front>
<title>CBOR Object Signing and Encryption (COSE)</title>
<author initials='J.' surname='Schaad' fullname='J. Schaad'><organization /></author>
<date year='2017' month='July' />
<abstract><t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size.  There is a need for the ability to have basic security services defined for this data format. This document defines the CBOR Object Signing and Encryption (COSE) protocol.  This specification describes how to create and process signatures, message authentication codes, and encryption using CBOR for serialization.  This specification additionally describes how to represent cryptographic keys using CBOR.</t></abstract>
</front>
<seriesInfo name='RFC' value='8152'/>
<seriesInfo name='DOI' value='10.17487/RFC8152'/>
</reference>




    </references>

    <references title='Informative References'>





<reference  anchor="RFC8937" target='https://www.rfc-editor.org/info/rfc8937'>
<front>
<title>Randomness Improvements for Security Protocols</title>
<author initials='C.' surname='Cremers' fullname='C. Cremers'><organization /></author>
<author initials='L.' surname='Garratt' fullname='L. Garratt'><organization /></author>
<author initials='S.' surname='Smyshlyaev' fullname='S. Smyshlyaev'><organization /></author>
<author initials='N.' surname='Sullivan' fullname='N. Sullivan'><organization /></author>
<author initials='C.' surname='Wood' fullname='C. Wood'><organization /></author>
<date year='2020' month='October' />
<abstract><t>Randomness is a crucial ingredient for Transport Layer Security (TLS) and related security protocols.  Weak or predictable &quot;cryptographically secure&quot; pseudorandom number generators (CSPRNGs) can be abused or exploited for malicious purposes. An initial entropy source that seeds a CSPRNG might be weak or broken as well, which can also lead to critical and systemic security problems. This document describes a way for security protocol implementations to augment their CSPRNGs using long-term private keys. This improves randomness from broken or otherwise subverted CSPRNGs.</t><t>This document is a product of the Crypto Forum Research Group (CFRG) in the IRTF.</t></abstract>
</front>
<seriesInfo name='RFC' value='8937'/>
<seriesInfo name='DOI' value='10.17487/RFC8937'/>
</reference>



<reference  anchor="RFC4949" target='https://www.rfc-editor.org/info/rfc4949'>
<front>
<title>Internet Security Glossary, Version 2</title>
<author initials='R.' surname='Shirey' fullname='R. Shirey'><organization /></author>
<date year='2007' month='August' />
<abstract><t>This Glossary provides definitions, abbreviations, and explanations of terminology for information system security. The 334 pages of entries offer recommendations to improve the comprehensibility of written material that is generated in the Internet Standards Process (RFC 2026). The recommendations follow the principles that such writing should (a) use the same term or definition whenever the same concept is mentioned; (b) use terms in their plainest, dictionary sense; (c) use terms that are already well-established in open publications; and (d) avoid terms that either favor a particular vendor or favor a particular technology or mechanism over other, competing techniques that already exist or could be developed.  This memo provides information for the Internet community.</t></abstract>
</front>
<seriesInfo name='FYI' value='36'/>
<seriesInfo name='RFC' value='4949'/>
<seriesInfo name='DOI' value='10.17487/RFC4949'/>
</reference>



<reference  anchor="RFC2630" target='https://www.rfc-editor.org/info/rfc2630'>
<front>
<title>Cryptographic Message Syntax</title>
<author initials='R.' surname='Housley' fullname='R. Housley'><organization /></author>
<date year='1999' month='June' />
<abstract><t>This document describes the Cryptographic Message Syntax.  This syntax is used to digitally sign, digest, authenticate, or encrypt arbitrary messages.  [STANDARDS-TRACK]</t></abstract>
</front>
<seriesInfo name='RFC' value='2630'/>
<seriesInfo name='DOI' value='10.17487/RFC2630'/>
</reference>




    </references>


<section anchor="acknowledgements" title="Acknowledgements">

<t>TBD: Add your name here.</t>

</section>


  </back>

<!-- ##markdown-source:
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

-->

</rfc>

