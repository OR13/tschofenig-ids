<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.6.39 (Ruby 3.0.2) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>

<?rfc rfcedstyle="yes"?>
<?rfc tocindent="yes"?>
<?rfc strict="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc text-list-symbols="-o*+"?>
<?rfc docmapping="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-cose-key-thumbprint-04" category="std" consensus="true" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="COSE Key Thumbprint">CBOR Object Signing and Encryption (COSE) Key Thumbprint</title>

    <author initials="K." surname="Isobe" fullname="Kohei Isobe">
      <organization>SECOM CO., LTD.</organization>
      <address>
        <email>isobekohei@gmail.com</email>
      </address>
    </author>
    <author initials="H." surname="Tschofenig" fullname="Hannes Tschofenig">
      <organization></organization>
      <address>
        <email>hannes.tschofenig@gmx.net</email>
      </address>
    </author>
    <author initials="O." surname="Steele" fullname="Orie Steele">
      <organization>Transmute</organization>
      <address>
        <postal>
          <country>United States</country>
        </postal>
        <email>orie@transmute.industries</email>
      </address>
    </author>

    <date year="2023" month="October" day="18"/>

    <area>Security</area>
    <workgroup>COSE</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<?line 66?>

<t>This specification defines a method for computing a hash value over a
COSE Key. It defines which fields in a COSE Key structure are used in the
hash computation, the method of creating a canonical form of the fields,
and how to hash the byte sequence. The resulting hash value can be used
for identifying or selecting a key that is the subject of the thumbprint.</t>



    </abstract>



  </front>

  <middle>


<?line 74?>

<section anchor="introduction"><name>Introduction</name>

<t>This specification defines a method for computing a hash value (a.k.a. digest)
over a COSE Key structure <xref target="RFC9052"/>.  It defines which fields in a COSE Key
structure are used in the hash computation, the method of creating a canonical
form for those fields, and how to hash the byte sequence.  The resulting hash
value can be used for identifying or selecting the key that is the subject of
the thumbprint, for instance, by using the COSE Key Thumbprint value as a "kid"
(key ID) value.</t>

<t>This specification defines how thumbprints of COSE keys are created.
Additionally, a new CWT confirmation method is registered in the registry
created by <xref target="RFC8747"/>. See Section 3.1 of <xref target="RFC8747"/> for details
about the use of a confirmation claim in a CWT with a proof-of-possession
key.</t>

</section>
<section anchor="terminology"><name>Terminology</name>

<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
"SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
"OPTIONAL" in this document are to be interpreted as described in
BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they appear in all
capitals, as shown here.</t>

</section>
<section anchor="thumbprint"><name>COSE Key Thumbprint</name>

<t>The thumbprint of a COSE Key MUST be computed as follows:</t>

<t><list style="numbers">
  <t>Construct a COSE_Key structure (see Section 7 of <xref target="RFC9052"/>) containing
only the required parameters representing the key. This specification
describes what those required parameters are and what, if necessary,
what the unique encoding is.</t>
  <t>Apply the deterministic encoding described in Section 4.2.1 of <xref target="RFC8949"/>
to the representation constructed in step (1).</t>
  <t>Hash the bytes produced in step (2) with a cryptographic hash function H.
For example, SHA-256 <xref target="RFC6234"/> may be used as a hash function.</t>
</list></t>

<t>The resulting value is the COSE Key Thumbprint with H of the COSE Key. The
details of this computation are further described in subsequent
sections.</t>

</section>
<section anchor="required"><name>Required COSE Key Parameters</name>

<t>Only the required parameters of a key's representation are used when
computing its COSE Key Thumbprint value. This section summarizes the
required parameters.</t>

<t>The "kty" (label: 1) element MUST be present for all key types and the integer
value found in the IANA COSE Key Types registry MUST be used. The tstr data
type is not used with the kty element.</t>

<t>Many COSE Key parameters depend on the chosen key type. The subsection below list
the required parameters for commonly used key types.</t>

<section anchor="octet-key-pair-okp"><name>Octet Key Pair (OKP)</name>

<t>The required parameters for elliptic curve public keys that use the OKP key type,
such as X25519, are:</t>

<t><list style="symbols">
  <t>"kty" (label: 1, data type: int, value: 1)</t>
  <t>"crv" (label: -1, value: int)</t>
  <t>"x" (label: -2, value: bstr)</t>
</list></t>

<t>Details can be found in Section 7.1 of <xref target="RFC9053"/>.</t>

</section>
<section anchor="elliptic-curve-keys-w-x-and-y-coordinate-pair"><name>Elliptic Curve Keys w/ x- and y-coordinate pair</name>

<t>The required parameters for elliptic curve public keys that use the EC2 key type, such
as NIST P-256, are:</t>

<t><list style="symbols">
  <t>"kty" (label: 1, data type: int, value: 2)</t>
  <t>"crv" (label: -1, data type: int)</t>
  <t>"x" (label: -2, data type: bstr)</t>
  <t>"y" (label: -3, data type: bstr)</t>
</list></t>

<t>Details can be found in Section 7.1 of <xref target="RFC9053"/>.</t>

<t>Note: <xref target="RFC9052"/> offers both compressed as well as uncompressed point
representations. For interoperability, implementations following this
specification MUST use the uncompressed point representation. Hence,
the y-coordinate is expressed as a bstr. An implementation that uses
the compressed point representation MUST compute the uncompressed
representation for the purpose of the thumbprint calculation.</t>

</section>
<section anchor="rsa-public-keys"><name>RSA Public Keys</name>

<t>The required parameters for an RSA public key are:</t>

<t><list style="symbols">
  <t>"kty" (label: 1, data type: int, value: 3)</t>
  <t>"n" (label: -1, data type: bstr)</t>
  <t>"e" (label: -2, data type: bstr)</t>
</list></t>

</section>
<section anchor="symmetric-keys"><name>Symmetric Keys</name>

<t>The required parameters for a symmetric key are:</t>

<t><list style="symbols">
  <t>"kty" (label: 1, data type: int, value: 4)</t>
  <t>"k" (label: -1, data type: bstr)</t>
</list></t>

</section>
<section anchor="hss-lms"><name>HSS-LMS</name>

<t>The required parameters for HSS-LMS keys are:</t>

<t><list style="symbols">
  <t>"kty" (label: 1, data type: int, value: 5)</t>
  <t>"pub" (label: -1, data type: bstr)</t>
</list></t>

</section>
<section anchor="others"><name>Others</name>

<t>As other key type values are defined, the specifications
defining them should be similarly consulted to determine which
parameters, in addition to the "kty" element, are required.</t>

</section>
</section>
<section anchor="miscellaneous-considerations"><name>Miscellaneous Considerations</name>

<section anchor="why-not-include-optional-cose-key-parameters"><name>Why Not Include Optional COSE Key Parameters?</name>

<t>Optional parameters of COSE Keys are intentionally not included in the
COSE Key Thumbprint computation so that their absence or presence
in the COSE Key does not alter the resulting value.  The COSE Key
Thumbprint value is a digest of the parameters required to represent
the key as a COSE Key -- not of additional data that may also
accompany the key.</t>

<t>Optional parameters are not included so that the COSE Key Thumbprint refers
to a key -- not a key with an associated set of key attributes.
Different application contexts might or might not include different
subsets of optional attributes about the key in the COSE Key structure.
If these were included in the calculation of the COSE Key Thumbprint,
the values would be different for those COSE Keys, even though the keys
are the same. The benefit of including only the required parameters is that the
COSE Key Thumbprint of any COSE Key representing the key remains the same,
regardless of any other attributes that are present.</t>

<t>Different kinds of thumbprints could be defined by other specifications
that might include some or all additional COSE Key parameters, if use
cases arise where such different kinds of thumbprints would be useful.</t>

</section>
<section anchor="selection-of-hash-function"><name>Selection of Hash Function</name>

<t>A specific hash function must be chosen by an application to compute
the hash value of the hash input.  For example, SHA-256 <xref target="RFC6234"/> might
be used as the hash function by the application.  While SHA-256 is a
good default choice at the time of writing, the hash function of
choice can be expected to change over time as the cryptographic
landscape evolves.</t>

<t>Note that in many cases, only the party that creates a key will need
to know the hash function used.  A typical usage is for the producer
of the key to use the thumbprint value as a "kid" (key ID) value. In
this case, the consumer of the "kid" treats it as an opaque value that
it uses to select the key.</t>

<t>However, in some cases, multiple parties will be reproducing the COSE Key
Thumbprint calculation and comparing the results.  In these cases,
the parties will need to know which hash function was used and use
the same one.</t>

</section>
<section anchor="thumbprints-of-keys-not-in-cose-key-format"><name>Thumbprints of Keys Not in COSE Key Format</name>

<t>A key need not be in COSE Key format to create a COSE Key Thumbprint
of it.  The only prerequisites are that the COSE Key representation of the
key be defined and the party creating the COSE KEY Thumbprint be in
possession of the necessary key material.</t>

</section>
<section anchor="relationship-to-digests-of-x509-values"><name>Relationship to Digests of X.509 Values</name>

<t>COSE Key Thumbprint values are computed on the COSE Key element required to
represent a key, rather than all members of a COSE Key that the key is
represented in.  Thus, they are more analogous to applications that
use digests of X.509 Subject Public Key Info (SPKI) values, which are
defined in Section 4.1.2.7 of <xref target="RFC5280"/>, than to applications that
use digests of complete certificate values, as the "x5t" (X.509
certificate SHA-1 thumbprint) <xref target="RFC9360"/> value defined for X.509
certificate objects does.  While logically equivalent to a digest of
the SPKI representation of the key, a COSE Key Thumbprint is computed over
the CBOR representation of that key, rather than over an ASN.1
representation of it.</t>

</section>
<section anchor="confirmation-methods"><name>Confirmation Methods</name>

<t><xref target="RFC8747"/> introduced confirmation methods for use with CBOR
Web Tokens (CWTs). CWTs have been defined in <xref target="RFC8392"/>. This
specification adds a new confirmation method based on COSE Key
Thumbprints.</t>

<t>The proof-of-possession key is identified using the "ckt" claim,
the COSE Key Thumbprint claim. This claim contains the value of
the COSE Key Thumbprint encoded as a binary string. Instead of
communicating the actual COSE Key only the thumbprint is conveyed.
This approach assumes that the recipient is able to obtain the
identified COSE Key using the thumbprint contained in the "ckt"
claim. In this case, the issuer of a CWT declares that the
presenter possesses a particular key and that the recipient
can cryptographically confirm the presenter's proof of possession
of the key by including a "ckt" claim in the CWT.</t>

<t>The following example demonstrates the use of the "ckt" claim
in a CWT (with line-breaks inserted for editorial reasons):</t>

<figure><artwork><![CDATA[
   {
    /iss/ 1 : "coaps://as.example.com",
    /aud/ 3 : "coaps://resource.example.org",
    /exp/ 4 : 1361398824,
    /cnf/ 8 : {
      /ckt/ [[TBD1]] : h'496bd8afadf307e5b08c64b0421bf9dc
                  01528a344a43bda88fadd1669da253ec'
     }
   }
]]></artwork></figure>

<t><xref target="IANA"/> registers the "ckt" claim and the confirmation method.
The "ckt" claim is expected to be used in the "cnf" claim.</t>

</section>
<section anchor="cose-key-thumbprint-uris"><name>COSE Key Thumbprint URIs</name>

<t>This specification defines Uniform Resource Identifiers (URIs)
to represent a COSE Key Thumbprint value. The design follows
the work of the JSON Web Key (JWK) Thumbprint URIs, specified
in <xref target="RFC9278"/>. This enables COSE Key Thumbprints to be used,
for example, as key identifiers in contexts requiring URIs.
This specification defines a URI prefix indicating that the
portion of the URI following the prefix is a COSE Key Thumbprint.</t>

<t>The following URI prefix is defined to indicate that the portion
of the URI following the prefix is a COSE Key Thumbprint:</t>

<figure><artwork><![CDATA[
  urn:ietf:params:oauth:ckt
]]></artwork></figure>

<t>To make the hash algorithm being used explicit in a URI, the prefix
is followed by a hash algorithm identifier and a COSE Key Thumbprint
value, each separated by a colon character to form a URI representing
a COSE Key Thumbprint.</t>

<t>Hash algorithm identifiers used in COSE Key Thumbprint URIs MUST be values
from the "Hash Name String" column in the IANA "Named Information
Hash Algorithm Registry" <xref target="IANA.Hash.Algorithms"/>. COSE Key Thumbprint URIs
with hash algorithm identifiers not found in this registry are not
considered valid and applications will need to detect and handle this
error, should it occur.</t>

<t>To promote interoperability among implementations, the SHA-256 hash
algorithm is mandatory to implement.</t>

<t>Since the URN is encoded as a string, the output of the COSE Key
Thumbprint computation described in <xref target="thumbprint"/> MUST be base64url
encoded without padding.</t>

<t><xref target="RFC7515"/> specifies Base64url encoding as follows:</t>

<t>"Base64 encoding using the URL- and filename-safe character set
defined in Section 5 of RFC 4648 <xref target="RFC4648"/>, with all trailing '='
characters omitted and without the inclusion of any line breaks,
whitespace, or other additional characters.  Note that the base64url
encoding of the empty octet sequence is the empty string.
(See Appendix C of <xref target="RFC7515"/> for notes on implementing base64url
encoding without padding.)"</t>

<t>The base64url encoding of the thumbprint shown in <xref target="example"/> is
shown below (with a line-break added for readability purposes).</t>

<figure><artwork><![CDATA[
NDk2YmQ4YWZhZGYzMDdlNWIwOGM2NGIwNDIxYmY5ZGM
wMTUyOGEzNDRhNDNiZGE4OGZhZGQxNjY5ZGEyNTNlYw
]]></artwork></figure>

<t>The full example of a COSE Key Thumbprint URI is shown below, again
with a line-break added.</t>

<figure><artwork><![CDATA[
urn:ietf:params:oauth:ckt:sha-256:NDk2YmQ4YWZhZGYzMDdlNWIwOG
M2NGIwNDIxYmY5ZGMwMTUyOGEzNDRhNDNiZGE4OGZhZGQxNjY5ZGEyNTNlYw
]]></artwork></figure>

</section>
</section>
<section anchor="example"><name>Example</name>

<t>This section demonstrates the COSE Key Thumbprint computation for the
following example COSE Key containing an ECC public key.</t>

<t>For better readability, the example is first presented in JSON (with
the long line broken for display purposes only).</t>

<figure><artwork><![CDATA[
  {
    / kty set to EC2 = Elliptic Curve Keys /
    1:2,
    / crv set to P-256 /
    -1:1,
    / public key: x-coordinate /
    -2:h'65eda5a12577c2bae829437fe338701a10aaa375e1bb5b5de108de439c0
8551d',
    / public key: y-coordinate /
    -3:h'1e52ed75701163f7f9e40ddf9f341b3dc9ba860af7e0ca7ca7e9eecd008
4d19c',
    / kid /
    2:'meriadoc.brandybuck@buckland.example'
  }
]]></artwork></figure>

<t>The example above corresponds to the following CBOR encoding
(with link breaks added for display purposes only):</t>

<figure><artwork><![CDATA[
A50102200121582065EDA5A12577C2BAE829437FE338701A10AAA375E1BB5B5DE108D
E439C08551D2258201E52ED75701163F7F9E40DDF9F341B3DC9BA860AF7E0CA7CA7E9
EECD0084D19C0258246D65726961646F632E6272616E64796275636B406275636B6C6
16E642E6578616D706C65
]]></artwork></figure>

<t>Not all of the parameters from the example above are used in the COSE Key
Thumbprint since the required parameters of an elliptic curve public key are:</t>

<t><list style="symbols">
  <t>"kty"</t>
  <t>"crv"</t>
  <t>"x"</t>
  <t>"y"</t>
</list></t>

<t>The required order based on Section 4.2.1 of <xref target="RFC8949"/> is:</t>

<t><list style="symbols">
  <t>"y" (label: -3, data type: bstr)</t>
  <t>"x" (label: -2, data type: bstr)</t>
  <t>"crv" (label: -1, data type: int)</t>
  <t>"kty" (label: 1, data type: int)</t>
</list></t>

<t>The resulting COSE Key structure, in CBOR diagnostic format with
line-breaks added for better readability, with the minimum parameters
in the correct order are.</t>

<figure><artwork><![CDATA[
{
   1:2,
  -1:1,
  -2:h'65eda5a12577c2bae829437fe338701a
       10aaa375e1bb5b5de108de439c08551d',
  -3:h'1e52ed75701163f7f9e40ddf9f341b3d
       c9ba860af7e0ca7ca7e9eecd0084d19c'
}
]]></artwork></figure>

<t>In CBOR encoding the result is (with line-breaks added for display
purposes only):</t>

<figure><artwork><![CDATA[
A40102200121582065EDA5A12577C2BAE829437FE338701A10AAA375E1BB5B5DE
108DE439C08551D2258201E52ED75701163F7F9E40DDF9F341B3DC9BA860AF7E0
CA7CA7E9EECD0084D19C
]]></artwork></figure>

<t>Using SHA-256, the resulting thumbprint is:</t>

<figure><artwork><![CDATA[
496bd8afadf307e5b08c64b0421bf9dc01528a344a43bda88fadd1669da253ec
]]></artwork></figure>

</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>A COSE Key Thumbprint will only uniquely identify a particular key if a
single unambiguous COSE Key representation for that key is defined and
used when computing the COSE Key Thumbprint.</t>

<t>If two asymmetric keys are used by different parties with different
key identifiers then the COSE Key Thumbprints will still be equal since
the key identifier itself is not included in the thumbprint calculation
(similarly to other optional parameters in the COSE_Key structure).
When the inclusion of certain optional parameters in the thumbprint
calcuation is important for a given application, this specification
is not the appropriate choice.</t>

<t>To promote interoperability among implementations, the SHA-256 hash
algorithm is mandatory to implement.</t>

<t>While thumbprint values are valuable for identifying legitimate keys,
comparing thumbprint values is not a reliable means of excluding the
use of particular keys (or transformations thereof). The reason is
that an attacker may supply a key that is a transformation of a key
in order to have it appear to be a different key.  For instance, if
a legitimate RSA key uses a modulus value N and an attacker supplies
a key with modulus 3*N, the modified key would still work about 1/3
of the time, but would appear to be a different key.</t>

<t>Producing thumbprints of symmetric keys needs to be done with care. Developers
MUST ensure that the symmetric key has sufficient entropy to prevent
attackers to precompute tables of symmetric keys with their corresponding
hash values. This can be prevented if the symmetric key is a randomly
selected key of at least 128 bit length. Using thumbprints with passwords
(i.e. low-entropy secrets) is dangerous and MUST be avoided. If a
developer is unable to determine whether all symmetric keys used in an
application have sufficient entropy, then thumbprints of symmetric keys
MUST NOT be used. In general, using thumbprints of symmetric keys should
only be used in special applications. In most other deployment scenarios
it is more appropriate to utilize a different naming scheme for key
identifiers.</t>

</section>
<section anchor="IANA"><name>IANA Considerations</name>

<t>IANA is requested to add the following entry to the "CWT Confirmation
Methods" registry established by <xref target="RFC8747"/>:</t>

<t><list style="symbols">
  <t>Confirmation Method Name: ckt</t>
  <t>Confirmation Method Description: COSE Key Thumbprint</t>
  <t>JWT Confirmation Method Name: jkt</t>
  <t>Confirmation Key: [[TBD1]]</t>
  <t>Confirmation Value Type(s): binary string</t>
  <t>Change Controller: IESG</t>
  <t>Specification Document(s): [[This document]]</t>
</list></t>

<t>Furthermore, IANA is requested to add a value to the "OAuth URI" registry
established with <xref target="RFC6755"/>:</t>

<t><list style="symbols">
  <t>URN:  urn:ietf:params:oauth:ckt</t>
  <t>Common Name:  COSE Key Thumbprint URI</t>
  <t>Change controller:  IESG</t>
  <t>Specification Document:  [[This document]]</t>
</list></t>

</section>
<section anchor="acknowledgements"><name>Acknowledgements</name>

<t>We would like to thank the authors of <xref target="RFC7638"/> for their work on the
JSON Web Key (JWK) Thumbprint specification. This document applies JWK
Thumbprints to COSE Key structures.</t>

<t>Additionally, we would like to thank Carsten Bormann, Ilari Liusvaara,
Laurence Lundblade, Daisuke Ajitomi, Michael Richardson, Mike Jones,
and Brendan Moran for their feedback.</t>

</section>


  </middle>

  <back>


    <references title='Normative References'>



<reference anchor="RFC2119">
  <front>
    <title>Key words for use in RFCs to Indicate Requirement Levels</title>
    <author fullname="S. Bradner" initials="S." surname="Bradner"/>
    <date month="March" year="1997"/>
    <abstract>
      <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="2119"/>
  <seriesInfo name="DOI" value="10.17487/RFC2119"/>
</reference>

<reference anchor="RFC8949">
  <front>
    <title>Concise Binary Object Representation (CBOR)</title>
    <author fullname="C. Bormann" initials="C." surname="Bormann"/>
    <author fullname="P. Hoffman" initials="P." surname="Hoffman"/>
    <date month="December" year="2020"/>
    <abstract>
      <t>The Concise Binary Object Representation (CBOR) is a data format whose design goals include the possibility of extremely small code size, fairly small message size, and extensibility without the need for version negotiation. These design goals make it different from earlier binary serializations such as ASN.1 and MessagePack.</t>
      <t>This document obsoletes RFC 7049, providing editorial improvements, new details, and errata fixes while keeping full compatibility with the interchange format of RFC 7049. It does not create a new version of the format.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="94"/>
  <seriesInfo name="RFC" value="8949"/>
  <seriesInfo name="DOI" value="10.17487/RFC8949"/>
</reference>

<reference anchor="RFC8174">
  <front>
    <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
    <author fullname="B. Leiba" initials="B." surname="Leiba"/>
    <date month="May" year="2017"/>
    <abstract>
      <t>RFC 2119 specifies common key words that may be used in protocol specifications. This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the defined special meanings.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="8174"/>
  <seriesInfo name="DOI" value="10.17487/RFC8174"/>
</reference>

<reference anchor="RFC9052">
  <front>
    <title>CBOR Object Signing and Encryption (COSE): Structures and Process</title>
    <author fullname="J. Schaad" initials="J." surname="Schaad"/>
    <date month="August" year="2022"/>
    <abstract>
      <t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size. There is a need to be able to define basic security services for this data format. This document defines the CBOR Object Signing and Encryption (COSE) protocol. This specification describes how to create and process signatures, message authentication codes, and encryption using CBOR for serialization. This specification additionally describes how to represent cryptographic keys using CBOR.</t>
      <t>This document, along with RFC 9053, obsoletes RFC 8152.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="96"/>
  <seriesInfo name="RFC" value="9052"/>
  <seriesInfo name="DOI" value="10.17487/RFC9052"/>
</reference>

<reference anchor="RFC9053">
  <front>
    <title>CBOR Object Signing and Encryption (COSE): Initial Algorithms</title>
    <author fullname="J. Schaad" initials="J." surname="Schaad"/>
    <date month="August" year="2022"/>
    <abstract>
      <t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size. There is a need to be able to define basic security services for this data format. This document defines a set of algorithms that can be used with the CBOR Object Signing and Encryption (COSE) protocol (RFC 9052).</t>
      <t>This document, along with RFC 9052, obsoletes RFC 8152.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9053"/>
  <seriesInfo name="DOI" value="10.17487/RFC9053"/>
</reference>

<reference anchor="RFC8747">
  <front>
    <title>Proof-of-Possession Key Semantics for CBOR Web Tokens (CWTs)</title>
    <author fullname="M. Jones" initials="M." surname="Jones"/>
    <author fullname="L. Seitz" initials="L." surname="Seitz"/>
    <author fullname="G. Selander" initials="G." surname="Selander"/>
    <author fullname="S. Erdtman" initials="S." surname="Erdtman"/>
    <author fullname="H. Tschofenig" initials="H." surname="Tschofenig"/>
    <date month="March" year="2020"/>
    <abstract>
      <t>This specification describes how to declare in a CBOR Web Token (CWT) (which is defined by RFC 8392) that the presenter of the CWT possesses a particular proof-of-possession key. Being able to prove possession of a key is also sometimes described as being the holder-of-key. This specification provides equivalent functionality to "Proof-of-Possession Key Semantics for JSON Web Tokens (JWTs)" (RFC 7800) but using Concise Binary Object Representation (CBOR) and CWTs rather than JavaScript Object Notation (JSON) and JSON Web Tokens (JWTs).</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8747"/>
  <seriesInfo name="DOI" value="10.17487/RFC8747"/>
</reference>

<reference anchor="RFC8392">
  <front>
    <title>CBOR Web Token (CWT)</title>
    <author fullname="M. Jones" initials="M." surname="Jones"/>
    <author fullname="E. Wahlstroem" initials="E." surname="Wahlstroem"/>
    <author fullname="S. Erdtman" initials="S." surname="Erdtman"/>
    <author fullname="H. Tschofenig" initials="H." surname="Tschofenig"/>
    <date month="May" year="2018"/>
    <abstract>
      <t>CBOR Web Token (CWT) is a compact means of representing claims to be transferred between two parties. The claims in a CWT are encoded in the Concise Binary Object Representation (CBOR), and CBOR Object Signing and Encryption (COSE) is used for added application-layer security protection. A claim is a piece of information asserted about a subject and is represented as a name/value pair consisting of a claim name and a claim value. CWT is derived from JSON Web Token (JWT) but uses CBOR rather than JSON.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8392"/>
  <seriesInfo name="DOI" value="10.17487/RFC8392"/>
</reference>

<reference anchor="RFC7515">
  <front>
    <title>JSON Web Signature (JWS)</title>
    <author fullname="M. Jones" initials="M." surname="Jones"/>
    <author fullname="J. Bradley" initials="J." surname="Bradley"/>
    <author fullname="N. Sakimura" initials="N." surname="Sakimura"/>
    <date month="May" year="2015"/>
    <abstract>
      <t>JSON Web Signature (JWS) represents content secured with digital signatures or Message Authentication Codes (MACs) using JSON-based data structures. Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and an IANA registry defined by that specification. Related encryption capabilities are described in the separate JSON Web Encryption (JWE) specification.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7515"/>
  <seriesInfo name="DOI" value="10.17487/RFC7515"/>
</reference>

<reference anchor="RFC4648">
  <front>
    <title>The Base16, Base32, and Base64 Data Encodings</title>
    <author fullname="S. Josefsson" initials="S." surname="Josefsson"/>
    <date month="October" year="2006"/>
    <abstract>
      <t>This document describes the commonly used base 64, base 32, and base 16 encoding schemes. It also discusses the use of line-feeds in encoded data, use of padding in encoded data, use of non-alphabet characters in encoded data, use of different encoding alphabets, and canonical encodings. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="4648"/>
  <seriesInfo name="DOI" value="10.17487/RFC4648"/>
</reference>

<reference anchor="RFC6755">
  <front>
    <title>An IETF URN Sub-Namespace for OAuth</title>
    <author fullname="B. Campbell" initials="B." surname="Campbell"/>
    <author fullname="H. Tschofenig" initials="H." surname="Tschofenig"/>
    <date month="October" year="2012"/>
    <abstract>
      <t>This document establishes an IETF URN Sub-namespace for use with OAuth-related specifications. This document is not an Internet Standards Track specification; it is published for informational purposes.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="6755"/>
  <seriesInfo name="DOI" value="10.17487/RFC6755"/>
</reference>




    </references>

    <references title='Informative References'>



<reference anchor="RFC7638">
  <front>
    <title>JSON Web Key (JWK) Thumbprint</title>
    <author fullname="M. Jones" initials="M." surname="Jones"/>
    <author fullname="N. Sakimura" initials="N." surname="Sakimura"/>
    <date month="September" year="2015"/>
    <abstract>
      <t>This specification defines a method for computing a hash value over a JSON Web Key (JWK). It defines which fields in a JWK are used in the hash computation, the method of creating a canonical form for those fields, and how to convert the resulting Unicode string into a byte sequence to be hashed. The resulting hash value can be used for identifying or selecting the key represented by the JWK that is the subject of the thumbprint.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7638"/>
  <seriesInfo name="DOI" value="10.17487/RFC7638"/>
</reference>

<reference anchor="RFC6234">
  <front>
    <title>US Secure Hash Algorithms (SHA and SHA-based HMAC and HKDF)</title>
    <author fullname="D. Eastlake 3rd" initials="D." surname="Eastlake 3rd"/>
    <author fullname="T. Hansen" initials="T." surname="Hansen"/>
    <date month="May" year="2011"/>
    <abstract>
      <t>Federal Information Processing Standard, FIPS</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="6234"/>
  <seriesInfo name="DOI" value="10.17487/RFC6234"/>
</reference>

<reference anchor="RFC5280">
  <front>
    <title>Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile</title>
    <author fullname="D. Cooper" initials="D." surname="Cooper"/>
    <author fullname="S. Santesson" initials="S." surname="Santesson"/>
    <author fullname="S. Farrell" initials="S." surname="Farrell"/>
    <author fullname="S. Boeyen" initials="S." surname="Boeyen"/>
    <author fullname="R. Housley" initials="R." surname="Housley"/>
    <author fullname="W. Polk" initials="W." surname="Polk"/>
    <date month="May" year="2008"/>
    <abstract>
      <t>This memo profiles the X.509 v3 certificate and X.509 v2 certificate revocation list (CRL) for use in the Internet. An overview of this approach and model is provided as an introduction. The X.509 v3 certificate format is described in detail, with additional information regarding the format and semantics of Internet name forms. Standard certificate extensions are described and two Internet-specific extensions are defined. A set of required certificate extensions is specified. The X.509 v2 CRL format is described in detail along with standard and Internet-specific extensions. An algorithm for X.509 certification path validation is described. An ASN.1 module and examples are provided in the appendices. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="5280"/>
  <seriesInfo name="DOI" value="10.17487/RFC5280"/>
</reference>

<reference anchor="RFC9360">
  <front>
    <title>CBOR Object Signing and Encryption (COSE): Header Parameters for Carrying and Referencing X.509 Certificates</title>
    <author fullname="J. Schaad" initials="J." surname="Schaad"/>
    <date month="February" year="2023"/>
    <abstract>
      <t>The CBOR Object Signing and Encryption (COSE) message structure uses references to keys in general. For some algorithms, additional properties are defined that carry parameters relating to keys as needed. The COSE Key structure is used for transporting keys outside of COSE messages. This document extends the way that keys can be identified and transported by providing attributes that refer to or contain X.509 certificates.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9360"/>
  <seriesInfo name="DOI" value="10.17487/RFC9360"/>
</reference>

<reference anchor="RFC9278">
  <front>
    <title>JWK Thumbprint URI</title>
    <author fullname="M. Jones" initials="M." surname="Jones"/>
    <author fullname="K. Yasuda" initials="K." surname="Yasuda"/>
    <date month="August" year="2022"/>
    <abstract>
      <t>This specification registers a kind of URI that represents a JSON Web Key (JWK) Thumbprint value. JWK Thumbprints are defined in RFC 7638. This enables JWK Thumbprints to be used, for instance, as key identifiers in contexts requiring URIs.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9278"/>
  <seriesInfo name="DOI" value="10.17487/RFC9278"/>
</reference>


<reference anchor="IANA.Hash.Algorithms" target="https://www.iana.org/assignments/named-information">
  <front>
    <title>Named Information Hash Algorithm Registry</title>
    <author >
      <organization></organization>
    </author>
    <date />
  </front>
</reference>


    </references>



  </back>

<!-- ##markdown-source:
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
HpeW4DMX4MeA7P8FmXJ7gBtIAAA=

-->

</rfc>

