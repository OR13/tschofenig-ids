<?xml version="1.0" encoding="UTF-8"?>
  <?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
  <!-- generated by https://github.com/cabo/kramdown-rfc version 1.7.1 (Ruby 3.0.2) -->


<!DOCTYPE rfc  [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">

]>

<?rfc rfcedstyle="yes"?>
<?rfc tocindent="yes"?>
<?rfc strict="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc text-list-symbols="-o*+"?>
<?rfc docmapping="yes"?>

<rfc ipr="trust200902" docName="draft-ietf-cose-key-thumbprint-04" category="std" consensus="true" tocInclude="true" sortRefs="true" symRefs="true">
  <front>
    <title abbrev="COSE Key Thumbprint">CBOR Object Signing and Encryption (COSE) Key Thumbprint</title>

    <author initials="K." surname="Isobe" fullname="Kohei Isobe">
      <organization>SECOM CO., LTD.</organization>
      <address>
        <email>isobekohei@gmail.com</email>
      </address>
    </author>
    <author initials="H." surname="Tschofenig" fullname="Hannes Tschofenig">
      <organization></organization>
      <address>
        <email>hannes.tschofenig@gmx.net</email>
      </address>
    </author>
    <author initials="O." surname="Steele" fullname="Orie Steele">
      <organization>Transmute</organization>
      <address>
        <postal>
          <country>United States</country>
        </postal>
        <email>orie@transmute.industries</email>
      </address>
    </author>

    <date year="2023" month="October" day="23"/>

    <area>Security</area>
    <workgroup>COSE</workgroup>
    <keyword>Internet-Draft</keyword>

    <abstract>


<?line 66?>

<t>This specification defines a method for computing a hash value over a
COSE Key. It defines which fields in a COSE Key structure are used in the
hash computation, the method of creating a canonical form of the fields,
and how to hash the byte sequence. The resulting hash value can be used
for identifying or selecting a key that is the subject of the thumbprint.</t>



    </abstract>



  </front>

  <middle>


<?line 74?>

<section anchor="introduction"><name>Introduction</name>

<t>This specification defines a method for computing a hash value (a.k.a. digest)
over a COSE Key structure <xref target="RFC9052"/>.  It defines which fields in a COSE Key
structure are used in the hash computation, the method of creating a canonical
form for those fields, and how to hash the byte sequence.  The resulting hash
value can be used for identifying or selecting the key that is the subject of
the thumbprint, for instance, by using the COSE Key Thumbprint value as a "kid"
(key ID) value.</t>

<t>This specification defines how thumbprints of COSE keys are created.
Additionally, a new CWT confirmation method is added to the IANA "CWT
Confirmation Methods" registry created by <xref target="RFC8747"/>. See Section 3.1 of
<xref target="RFC8747"/> for details about the use of a confirmation claim in a CWT
with a proof-of-possession key.</t>

</section>
<section anchor="terminology"><name>Terminology</name>

<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
"SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
"OPTIONAL" in this document are to be interpreted as described in
BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they appear in all
capitals, as shown here.</t>

</section>
<section anchor="thumbprint"><name>COSE Key Thumbprint</name>

<t>The thumbprint of a COSE Key MUST be computed as follows:</t>

<t><list style="numbers">
  <t>Construct a COSE_Key structure (see Section 7 of <xref target="RFC9052"/>) containing
only the required parameters representing the key. This specification
describes what those required parameters are and what, if necessary,
what the unique encoding is.</t>
  <t>Apply the deterministic encoding described in Section 4.2.1 of <xref target="RFC8949"/>
to the representation constructed in step (1).</t>
  <t>Hash the bytes produced in step (2) with a cryptographic hash function H.
For example, SHA-256 <xref target="RFC6234"/> may be used as a hash function.</t>
</list></t>

<t>The resulting value is the COSE Key Thumbprint with H of the COSE Key. The
details of this computation are further described in subsequent
sections.</t>

</section>
<section anchor="required"><name>Required COSE Key Parameters</name>

<t>Only the required parameters of a key's representation are used when
computing its COSE Key Thumbprint value. This section summarizes the
required parameters.</t>

<t>The "kty" (label: 1) element MUST be present for all key types and the integer
value found in the IANA COSE Key Types registry MUST be used. The tstr data
type is not used with the kty element.</t>

<t>Many COSE Key parameters depend on the chosen key type. The subsection below list
the required parameters for commonly used key types.</t>

<section anchor="octet-key-pair-okp"><name>Octet Key Pair (OKP)</name>

<t>The required parameters for elliptic curve public keys that use the OKP key type,
such as X25519, are:</t>

<t><list style="symbols">
  <t>"kty" (label: 1, data type: int, value: 1)</t>
  <t>"crv" (label: -1, value: int)</t>
  <t>"x" (label: -2, value: bstr)</t>
</list></t>

<t>Details can be found in Section 7.1 of <xref target="RFC9053"/>.</t>

</section>
<section anchor="ecc"><name>Elliptic Curve Keys with X- and Y-Coordinate Pair</name>

<t>The required parameters for elliptic curve public keys that use the EC2 key type, such
as NIST P-256, are:</t>

<t><list style="symbols">
  <t>"kty" (label: 1, data type: int, value: 2)</t>
  <t>"crv" (label: -1, data type: int)</t>
  <t>"x" (label: -2, data type: bstr)</t>
  <t>"y" (label: -3, data type: bstr)</t>
</list></t>

<t>Details can be found in Section 7.1 of <xref target="RFC9053"/>.</t>

<t>Note: <xref target="RFC9052"/> offers both compressed as well as uncompressed point
representations. For interoperability, implementations following this
specification MUST use the uncompressed point representation. Hence,
the y-coordinate is expressed as a bstr. An implementation that uses
the compressed point representation MUST compute the uncompressed
representation for the purpose of the thumbprint calculation.</t>

</section>
<section anchor="rsa-public-keys"><name>RSA Public Keys</name>

<t>The required parameters for an RSA public key are:</t>

<t><list style="symbols">
  <t>"kty" (label: 1, data type: int, value: 3)</t>
  <t>"n" (label: -1, data type: bstr)</t>
  <t>"e" (label: -2, data type: bstr)</t>
</list></t>

</section>
<section anchor="symmetric-keys"><name>Symmetric Keys</name>

<t>The required parameters for a symmetric key are:</t>

<t><list style="symbols">
  <t>"kty" (label: 1, data type: int, value: 4)</t>
  <t>"k" (label: -1, data type: bstr)</t>
</list></t>

</section>
<section anchor="hss-lms"><name>HSS-LMS</name>

<t>The required parameters for HSS-LMS keys are:</t>

<t><list style="symbols">
  <t>"kty" (label: 1, data type: int, value: 5)</t>
  <t>"pub" (label: -1, data type: bstr)</t>
</list></t>

</section>
<section anchor="others"><name>Others</name>

<t>As other key type values are defined, the specifications
defining them should be similarly consulted to determine which
parameters, in addition to the "kty" element, are required.</t>

</section>
</section>
<section anchor="miscellaneous-considerations"><name>Miscellaneous Considerations</name>

<section anchor="why-not-include-optional-cose-key-parameters"><name>Why Not Include Optional COSE Key Parameters?</name>

<t>Optional parameters of COSE Keys are intentionally not included in the
COSE Key Thumbprint computation so that their absence or presence
in the COSE Key does not alter the resulting value.  The COSE Key
Thumbprint value is a digest of the parameters required to represent
the key as a COSE Key -- not of additional data that may also
accompany the key.</t>

<t>Optional parameters are not included so that the COSE Key Thumbprint refers
to a key -- not a key with an associated set of key attributes.
Different application contexts might or might not include different
subsets of optional attributes about the key in the COSE Key structure.
If these were included in the calculation of the COSE Key Thumbprint,
the values would be different for those COSE Keys, even though the keys
are the same. The benefit of including only the required parameters is that the
COSE Key Thumbprint of any COSE Key representing the key remains the same,
regardless of any other attributes that are present.</t>

<t>Different kinds of thumbprints could be defined by other specifications
that might include some or all additional COSE Key parameters, if use
cases arise where such different kinds of thumbprints would be useful.</t>

</section>
<section anchor="selection-of-hash-function"><name>Selection of Hash Function</name>

<t>A specific hash function must be chosen by an application to compute
the hash value of the hash input.  For example, SHA-256 <xref target="RFC6234"/> might
be used as the hash function by the application.  While SHA-256 is a
good default choice at the time of writing, the hash function of
choice can be expected to change over time as the cryptographic
landscape evolves.</t>

<t>Note that in many cases, only the party that creates a key will need
to know the hash function used.  A typical usage is for the producer
of the key to use the thumbprint value as a "kid" (key ID) value. In
this case, the consumer of the "kid" treats it as an opaque value that
it uses to select the key.</t>

<t>However, in some cases, multiple parties will be reproducing the COSE Key
Thumbprint calculation and comparing the results.  In these cases,
the parties will need to know which hash function was used and use
the same one.</t>

</section>
<section anchor="thumbprints-of-keys-not-in-cose-key-format"><name>Thumbprints of Keys Not in COSE Key Format</name>

<t>A key need not be in COSE Key format to create a COSE Key Thumbprint
of it.  The only prerequisites are that the COSE Key representation of the
key be defined and the party creating the COSE KEY Thumbprint be in
possession of the necessary key material.</t>

</section>
<section anchor="relationship-to-digests-of-x509-values"><name>Relationship to Digests of X.509 Values</name>

<t>COSE Key Thumbprint values are computed on the COSE Key element required to
represent a key, rather than all members of a COSE Key that the key is
represented in.  Thus, they are more analogous to applications that
use digests of X.509 Subject Public Key Info (SPKI) values, which are
defined in Section 4.1.2.7 of <xref target="RFC5280"/>, than to applications that
use digests of complete certificate values, as the "x5t" (X.509
certificate SHA-1 thumbprint) <xref target="RFC9360"/> value defined for X.509
certificate objects does.  While logically equivalent to a digest of
the SPKI representation of the key, a COSE Key Thumbprint is computed over
the CBOR representation of that key, rather than over an ASN.1
representation of it.</t>

</section>
<section anchor="confirmation-methods"><name>Confirmation Methods</name>

<t><xref target="RFC8747"/> introduced confirmation methods for use with CBOR
Web Tokens (CWTs). CWTs have been defined in <xref target="RFC8392"/>. This
specification adds a new confirmation method based on COSE Key
Thumbprints.</t>

<t>The proof-of-possession key is identified using the "ckt" claim,
the COSE Key Thumbprint claim. This claim contains the value of
the COSE Key Thumbprint encoded as a binary string. Instead of
communicating the actual COSE Key only the thumbprint is conveyed.
This approach assumes that the recipient is able to obtain the
identified COSE Key using the thumbprint contained in the "ckt"
claim. In this case, the issuer of a CWT declares that the
presenter possesses a particular key and that the recipient
can cryptographically confirm the presenter's proof of possession
of the key by including a "ckt" claim in the CWT.</t>

<t>The following example demonstrates the use of the "ckt" claim
in a CWT (with line-breaks inserted for editorial reasons):</t>

<figure><artwork><![CDATA[
   {
    /iss/ 1 : "coaps://as.example.com",
    /aud/ 3 : "coaps://resource.example.org",
    /exp/ 4 : 1361398824,
    /cnf/ 8 : {
      /ckt/ [[TBD1]] : h'496bd8afadf307e5b08c64b0421bf9dc
                  01528a344a43bda88fadd1669da253ec'
     }
   }
]]></artwork></figure>

<t><xref target="IANA"/> registers the "ckt" claim and the confirmation method.
The "ckt" claim is expected to be used in the "cnf" claim.</t>

</section>
<section anchor="cose-key-thumbprint-uris"><name>COSE Key Thumbprint URIs</name>

<t>This specification defines Uniform Resource Identifiers (URIs)
to represent a COSE Key Thumbprint value. The design follows
the work of the JSON Web Key (JWK) Thumbprint URIs, specified
in <xref target="RFC9278"/>. This enables COSE Key Thumbprints to be used,
for example, as key identifiers in contexts requiring URIs.
This specification defines a URI prefix indicating that the
portion of the URI following the prefix is a COSE Key Thumbprint.</t>

<t>The following URI prefix is defined to indicate that the portion
of the URI following the prefix is a COSE Key Thumbprint:</t>

<figure><artwork><![CDATA[
  urn:ietf:params:oauth:ckt
]]></artwork></figure>

<t>To make the hash algorithm being used explicit in a URI, the prefix
is followed by a hash algorithm identifier and a COSE Key Thumbprint
value, each separated by a colon character to form a URI representing
a COSE Key Thumbprint.</t>

<t>Hash algorithm identifiers used in COSE Key Thumbprint URIs MUST be values
from the "Hash Name String" column in the IANA "Named Information
Hash Algorithm Registry" <xref target="IANA.Hash.Algorithms"/>. COSE Key Thumbprint URIs
with hash algorithm identifiers not found in this registry are not
considered valid and applications will need to detect and handle this
error, should it occur.</t>

<t>To promote interoperability among implementations, the SHA-256 hash
algorithm is mandatory to implement.</t>

<t>Since the URN is encoded as a string, the output of the COSE Key
Thumbprint computation described in <xref target="thumbprint"/> MUST be base64url
encoded without padding.</t>

<t><xref target="RFC7515"/> specifies Base64url encoding as follows:</t>

<t>"Base64 encoding using the URL- and filename-safe character set
defined in Section 5 of RFC 4648 <xref target="RFC4648"/>, with all trailing '='
characters omitted and without the inclusion of any line breaks,
whitespace, or other additional characters.  Note that the base64url
encoding of the empty octet sequence is the empty string.
(See Appendix C of <xref target="RFC7515"/> for notes on implementing base64url
encoding without padding.)"</t>

<t>The base64url encoding of the thumbprint shown in <xref target="example"/> is
shown below (with a line-break added for readability purposes).</t>

<figure><artwork><![CDATA[
SWvYr63zB-WwjGSwQhv53AFSijRKQ72oj63RZp2iU-w
]]></artwork></figure>

<t>The full example of a COSE Key Thumbprint URI is shown below, again
with a line-break added.</t>

<figure><artwork><![CDATA[
urn:ietf:params:oauth:ckt:sha-256:
SWvYr63zB-WwjGSwQhv53AFSijRKQ72oj63RZp2iU-w
]]></artwork></figure>

</section>
</section>
<section anchor="example"><name>Example</name>

<t>This section demonstrates the COSE Key Thumbprint computation for the
following example COSE Key containing an ECC public key.</t>

<t>For better readability, the example is first presented in CBOR diagnostic format (with
the long line broken for display purposes only).</t>

<figure><artwork><![CDATA[
  {
    / kty set to EC2 = Elliptic Curve Keys /
    1:2,
    / crv set to P-256 /
    -1:1,
    / public key: x-coordinate /
    -2:h'65eda5a12577c2bae829437fe338701a10aaa375e1bb5b5de108de439c0
8551d',
    / public key: y-coordinate /
    -3:h'1e52ed75701163f7f9e40ddf9f341b3dc9ba860af7e0ca7ca7e9eecd008
4d19c',
    / kid is bstr, not used in COSE Key Thumbprint /
    2:h'1decade2facade3'
  }
]]></artwork></figure>

<t>The example above corresponds to the following CBOR encoding
(with link breaks added for display purposes only):</t>

<figure><artwork><![CDATA[
A50102200121582065EDA5A12577C2BAE829437FE338701A10AAA375E1BB5B5DE108D
E439C08551D2258201E52ED75701163F7F9E40DDF9F341B3DC9BA860AF7E0CA7CA7E9
EECD0084D19C0258246D65726961646F632E6272616E64796275636B406275636B6C6
16E642E6578616D706C65
]]></artwork></figure>

<t>Not all of the parameters from the example above are used in the COSE Key
Thumbprint computation since the required parameters of an elliptic curve
public key are (as listed in <xref target="ecc"/>):</t>

<t><list style="symbols">
  <t>"kty"</t>
  <t>"crv"</t>
  <t>"x"</t>
  <t>"y"</t>
</list></t>

<t>The resulting COSE Key structure, in CBOR diagnostic format with
line-breaks added for better readability, with the minimum parameters
in the correct order are.</t>

<figure><artwork><![CDATA[
{
   1:2,
  -1:1,
  -2:h'65eda5a12577c2bae829437fe338701a
       10aaa375e1bb5b5de108de439c08551d',
  -3:h'1e52ed75701163f7f9e40ddf9f341b3d
       c9ba860af7e0ca7ca7e9eecd0084d19c'
}
]]></artwork></figure>

<t>In CBOR encoding the result is (with line-breaks added for display
purposes only):</t>

<figure><artwork><![CDATA[
A40102200121582065EDA5A12577C2BAE829437FE338701A10AAA375E1BB5B5DE
108DE439C08551D2258201E52ED75701163F7F9E40DDF9F341B3DC9BA860AF7E0
CA7CA7E9EECD0084D19C
]]></artwork></figure>

<t>Using SHA-256, the resulting thumbprint is:</t>

<figure><artwork><![CDATA[
496bd8afadf307e5b08c64b0421bf9dc01528a344a43bda88fadd1669da253ec
]]></artwork></figure>

</section>
<section anchor="security-considerations"><name>Security Considerations</name>

<t>A COSE Key Thumbprint will only uniquely identify a particular key if a
single unambiguous COSE Key representation for that key is defined and
used when computing the COSE Key Thumbprint.</t>

<t>If two asymmetric keys are used by different parties with different
key identifiers then the COSE Key Thumbprints will still be equal since
the key identifier itself is not included in the thumbprint calculation
(similarly to other optional parameters in the COSE_Key structure).
When the inclusion of certain optional parameters in the thumbprint
calcuation is important for a given application, this specification
is not the appropriate choice.</t>

<t>To promote interoperability among implementations, the SHA-256 hash
algorithm is mandatory to implement.</t>

<t>While thumbprint values are valuable for identifying legitimate keys,
comparing thumbprint values is not a reliable means of excluding the
use of particular keys (or transformations thereof). The reason is
that an attacker may supply a key that is a transformation of a key
in order to have it appear to be a different key.  For instance, if
a legitimate RSA key uses a modulus value N and an attacker supplies
a key with modulus 3*N, the modified key would still work about 1/3
of the time, but would appear to be a different key.</t>

<t>Producing thumbprints of symmetric keys needs to be done with care. Developers
MUST ensure that the symmetric key has sufficient entropy to prevent
attackers to precompute tables of symmetric keys with their corresponding
hash values. This can be prevented if the symmetric key is a randomly
selected key of at least 128 bit length. Using thumbprints with passwords
(i.e. low-entropy secrets) is dangerous and MUST be avoided. If a
developer is unable to determine whether all symmetric keys used in an
application have sufficient entropy, then thumbprints of symmetric keys
MUST NOT be used. In general, using thumbprints of symmetric keys should
only be used in special applications. In most other deployment scenarios
it is more appropriate to utilize a different naming scheme for key
identifiers.</t>

</section>
<section anchor="IANA"><name>IANA Considerations</name>

<t>IANA is requested to add the following entry to the IANA "CWT Confirmation
Methods" registry established by <xref target="RFC8747"/>:</t>

<t><list style="symbols">
  <t>Confirmation Method Name: ckt</t>
  <t>Confirmation Method Description: COSE Key Thumbprint</t>
  <t>JWT Confirmation Method Name: jkt</t>
  <t>Confirmation Key: [[TBD1]]</t>
  <t>Confirmation Value Type(s): binary string</t>
  <t>Change Controller: IESG</t>
  <t>Specification Document(s): [[This document]]</t>
</list></t>

<t>Furthermore, IANA is requested to add a value to the IANA "OAuth URI" registry
established with <xref target="RFC6755"/>:</t>

<t><list style="symbols">
  <t>URN:  urn:ietf:params:oauth:ckt</t>
  <t>Common Name:  COSE Key Thumbprint URI</t>
  <t>Change controller:  IESG</t>
  <t>Specification Document:  [[This document]]</t>
</list></t>

</section>
<section anchor="acknowledgements"><name>Acknowledgements</name>

<t>We would like to thank the authors of <xref target="RFC7638"/> for their work on the
JSON Web Key (JWK) Thumbprint specification. This document applies JWK
Thumbprints to COSE Key structures.</t>

<t>Additionally, we would like to thank Carsten Bormann, Ilari Liusvaara,
Laurence Lundblade, Daisuke Ajitomi, Michael Richardson, Michael B. Jones,
and Brendan Moran for their feedback.</t>

</section>


  </middle>

  <back>


    <references title='Normative References' anchor="sec-normative-references">



<reference anchor="RFC2119">
  <front>
    <title>Key words for use in RFCs to Indicate Requirement Levels</title>
    <author fullname="S. Bradner" initials="S." surname="Bradner"/>
    <date month="March" year="1997"/>
    <abstract>
      <t>In many standards track documents several words are used to signify the requirements in the specification. These words are often capitalized. This document defines these words as they should be interpreted in IETF documents. This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="2119"/>
  <seriesInfo name="DOI" value="10.17487/RFC2119"/>
</reference>

<reference anchor="RFC8949">
  <front>
    <title>Concise Binary Object Representation (CBOR)</title>
    <author fullname="C. Bormann" initials="C." surname="Bormann"/>
    <author fullname="P. Hoffman" initials="P." surname="Hoffman"/>
    <date month="December" year="2020"/>
    <abstract>
      <t>The Concise Binary Object Representation (CBOR) is a data format whose design goals include the possibility of extremely small code size, fairly small message size, and extensibility without the need for version negotiation. These design goals make it different from earlier binary serializations such as ASN.1 and MessagePack.</t>
      <t>This document obsoletes RFC 7049, providing editorial improvements, new details, and errata fixes while keeping full compatibility with the interchange format of RFC 7049. It does not create a new version of the format.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="94"/>
  <seriesInfo name="RFC" value="8949"/>
  <seriesInfo name="DOI" value="10.17487/RFC8949"/>
</reference>

<reference anchor="RFC8174">
  <front>
    <title>Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words</title>
    <author fullname="B. Leiba" initials="B." surname="Leiba"/>
    <date month="May" year="2017"/>
    <abstract>
      <t>RFC 2119 specifies common key words that may be used in protocol specifications. This document aims to reduce the ambiguity by clarifying that only UPPERCASE usage of the key words have the defined special meanings.</t>
    </abstract>
  </front>
  <seriesInfo name="BCP" value="14"/>
  <seriesInfo name="RFC" value="8174"/>
  <seriesInfo name="DOI" value="10.17487/RFC8174"/>
</reference>

<reference anchor="RFC9052">
  <front>
    <title>CBOR Object Signing and Encryption (COSE): Structures and Process</title>
    <author fullname="J. Schaad" initials="J." surname="Schaad"/>
    <date month="August" year="2022"/>
    <abstract>
      <t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size. There is a need to be able to define basic security services for this data format. This document defines the CBOR Object Signing and Encryption (COSE) protocol. This specification describes how to create and process signatures, message authentication codes, and encryption using CBOR for serialization. This specification additionally describes how to represent cryptographic keys using CBOR.</t>
      <t>This document, along with RFC 9053, obsoletes RFC 8152.</t>
    </abstract>
  </front>
  <seriesInfo name="STD" value="96"/>
  <seriesInfo name="RFC" value="9052"/>
  <seriesInfo name="DOI" value="10.17487/RFC9052"/>
</reference>

<reference anchor="RFC9053">
  <front>
    <title>CBOR Object Signing and Encryption (COSE): Initial Algorithms</title>
    <author fullname="J. Schaad" initials="J." surname="Schaad"/>
    <date month="August" year="2022"/>
    <abstract>
      <t>Concise Binary Object Representation (CBOR) is a data format designed for small code size and small message size. There is a need to be able to define basic security services for this data format. This document defines a set of algorithms that can be used with the CBOR Object Signing and Encryption (COSE) protocol (RFC 9052).</t>
      <t>This document, along with RFC 9052, obsoletes RFC 8152.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9053"/>
  <seriesInfo name="DOI" value="10.17487/RFC9053"/>
</reference>

<reference anchor="RFC8747">
  <front>
    <title>Proof-of-Possession Key Semantics for CBOR Web Tokens (CWTs)</title>
    <author fullname="M. Jones" initials="M." surname="Jones"/>
    <author fullname="L. Seitz" initials="L." surname="Seitz"/>
    <author fullname="G. Selander" initials="G." surname="Selander"/>
    <author fullname="S. Erdtman" initials="S." surname="Erdtman"/>
    <author fullname="H. Tschofenig" initials="H." surname="Tschofenig"/>
    <date month="March" year="2020"/>
    <abstract>
      <t>This specification describes how to declare in a CBOR Web Token (CWT) (which is defined by RFC 8392) that the presenter of the CWT possesses a particular proof-of-possession key. Being able to prove possession of a key is also sometimes described as being the holder-of-key. This specification provides equivalent functionality to "Proof-of-Possession Key Semantics for JSON Web Tokens (JWTs)" (RFC 7800) but using Concise Binary Object Representation (CBOR) and CWTs rather than JavaScript Object Notation (JSON) and JSON Web Tokens (JWTs).</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8747"/>
  <seriesInfo name="DOI" value="10.17487/RFC8747"/>
</reference>

<reference anchor="RFC8392">
  <front>
    <title>CBOR Web Token (CWT)</title>
    <author fullname="M. Jones" initials="M." surname="Jones"/>
    <author fullname="E. Wahlstroem" initials="E." surname="Wahlstroem"/>
    <author fullname="S. Erdtman" initials="S." surname="Erdtman"/>
    <author fullname="H. Tschofenig" initials="H." surname="Tschofenig"/>
    <date month="May" year="2018"/>
    <abstract>
      <t>CBOR Web Token (CWT) is a compact means of representing claims to be transferred between two parties. The claims in a CWT are encoded in the Concise Binary Object Representation (CBOR), and CBOR Object Signing and Encryption (COSE) is used for added application-layer security protection. A claim is a piece of information asserted about a subject and is represented as a name/value pair consisting of a claim name and a claim value. CWT is derived from JSON Web Token (JWT) but uses CBOR rather than JSON.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="8392"/>
  <seriesInfo name="DOI" value="10.17487/RFC8392"/>
</reference>

<reference anchor="RFC7515">
  <front>
    <title>JSON Web Signature (JWS)</title>
    <author fullname="M. Jones" initials="M." surname="Jones"/>
    <author fullname="J. Bradley" initials="J." surname="Bradley"/>
    <author fullname="N. Sakimura" initials="N." surname="Sakimura"/>
    <date month="May" year="2015"/>
    <abstract>
      <t>JSON Web Signature (JWS) represents content secured with digital signatures or Message Authentication Codes (MACs) using JSON-based data structures. Cryptographic algorithms and identifiers for use with this specification are described in the separate JSON Web Algorithms (JWA) specification and an IANA registry defined by that specification. Related encryption capabilities are described in the separate JSON Web Encryption (JWE) specification.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7515"/>
  <seriesInfo name="DOI" value="10.17487/RFC7515"/>
</reference>

<reference anchor="RFC4648">
  <front>
    <title>The Base16, Base32, and Base64 Data Encodings</title>
    <author fullname="S. Josefsson" initials="S." surname="Josefsson"/>
    <date month="October" year="2006"/>
    <abstract>
      <t>This document describes the commonly used base 64, base 32, and base 16 encoding schemes. It also discusses the use of line-feeds in encoded data, use of padding in encoded data, use of non-alphabet characters in encoded data, use of different encoding alphabets, and canonical encodings. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="4648"/>
  <seriesInfo name="DOI" value="10.17487/RFC4648"/>
</reference>

<reference anchor="RFC6755">
  <front>
    <title>An IETF URN Sub-Namespace for OAuth</title>
    <author fullname="B. Campbell" initials="B." surname="Campbell"/>
    <author fullname="H. Tschofenig" initials="H." surname="Tschofenig"/>
    <date month="October" year="2012"/>
    <abstract>
      <t>This document establishes an IETF URN Sub-namespace for use with OAuth-related specifications. This document is not an Internet Standards Track specification; it is published for informational purposes.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="6755"/>
  <seriesInfo name="DOI" value="10.17487/RFC6755"/>
</reference>




    </references>

    <references title='Informative References' anchor="sec-informative-references">



<reference anchor="RFC7638">
  <front>
    <title>JSON Web Key (JWK) Thumbprint</title>
    <author fullname="M. Jones" initials="M." surname="Jones"/>
    <author fullname="N. Sakimura" initials="N." surname="Sakimura"/>
    <date month="September" year="2015"/>
    <abstract>
      <t>This specification defines a method for computing a hash value over a JSON Web Key (JWK). It defines which fields in a JWK are used in the hash computation, the method of creating a canonical form for those fields, and how to convert the resulting Unicode string into a byte sequence to be hashed. The resulting hash value can be used for identifying or selecting the key represented by the JWK that is the subject of the thumbprint.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="7638"/>
  <seriesInfo name="DOI" value="10.17487/RFC7638"/>
</reference>

<reference anchor="RFC6234">
  <front>
    <title>US Secure Hash Algorithms (SHA and SHA-based HMAC and HKDF)</title>
    <author fullname="D. Eastlake 3rd" initials="D." surname="Eastlake 3rd"/>
    <author fullname="T. Hansen" initials="T." surname="Hansen"/>
    <date month="May" year="2011"/>
    <abstract>
      <t>Federal Information Processing Standard, FIPS</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="6234"/>
  <seriesInfo name="DOI" value="10.17487/RFC6234"/>
</reference>

<reference anchor="RFC5280">
  <front>
    <title>Internet X.509 Public Key Infrastructure Certificate and Certificate Revocation List (CRL) Profile</title>
    <author fullname="D. Cooper" initials="D." surname="Cooper"/>
    <author fullname="S. Santesson" initials="S." surname="Santesson"/>
    <author fullname="S. Farrell" initials="S." surname="Farrell"/>
    <author fullname="S. Boeyen" initials="S." surname="Boeyen"/>
    <author fullname="R. Housley" initials="R." surname="Housley"/>
    <author fullname="W. Polk" initials="W." surname="Polk"/>
    <date month="May" year="2008"/>
    <abstract>
      <t>This memo profiles the X.509 v3 certificate and X.509 v2 certificate revocation list (CRL) for use in the Internet. An overview of this approach and model is provided as an introduction. The X.509 v3 certificate format is described in detail, with additional information regarding the format and semantics of Internet name forms. Standard certificate extensions are described and two Internet-specific extensions are defined. A set of required certificate extensions is specified. The X.509 v2 CRL format is described in detail along with standard and Internet-specific extensions. An algorithm for X.509 certification path validation is described. An ASN.1 module and examples are provided in the appendices. [STANDARDS-TRACK]</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="5280"/>
  <seriesInfo name="DOI" value="10.17487/RFC5280"/>
</reference>

<reference anchor="RFC9360">
  <front>
    <title>CBOR Object Signing and Encryption (COSE): Header Parameters for Carrying and Referencing X.509 Certificates</title>
    <author fullname="J. Schaad" initials="J." surname="Schaad"/>
    <date month="February" year="2023"/>
    <abstract>
      <t>The CBOR Object Signing and Encryption (COSE) message structure uses references to keys in general. For some algorithms, additional properties are defined that carry parameters relating to keys as needed. The COSE Key structure is used for transporting keys outside of COSE messages. This document extends the way that keys can be identified and transported by providing attributes that refer to or contain X.509 certificates.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9360"/>
  <seriesInfo name="DOI" value="10.17487/RFC9360"/>
</reference>

<reference anchor="RFC9278">
  <front>
    <title>JWK Thumbprint URI</title>
    <author fullname="M. Jones" initials="M." surname="Jones"/>
    <author fullname="K. Yasuda" initials="K." surname="Yasuda"/>
    <date month="August" year="2022"/>
    <abstract>
      <t>This specification registers a kind of URI that represents a JSON Web Key (JWK) Thumbprint value. JWK Thumbprints are defined in RFC 7638. This enables JWK Thumbprints to be used, for instance, as key identifiers in contexts requiring URIs.</t>
    </abstract>
  </front>
  <seriesInfo name="RFC" value="9278"/>
  <seriesInfo name="DOI" value="10.17487/RFC9278"/>
</reference>


<reference anchor="IANA.Hash.Algorithms" target="https://www.iana.org/assignments/named-information">
  <front>
    <title>Named Information Hash Algorithm Registry</title>
    <author >
      <organization></organization>
    </author>
    <date />
  </front>
</reference>


    </references>



  </back>

<!-- ##markdown-source:
H4sIAAAAAAAAA71c63PbyJH/zir+D3PyB0s5kuabEqtSF0qkYq1tyRHlc/ZS
qdQQGJKzAgEGA0jmurx/+3X3PDAgQcvZXF1qK0uRg5mefvz6iW02m/VaJrNI
jNnV5d09u1v8IoKMzeUqlvGK8ThkszhId9tMJjE7vbqbz87YO7FjD+t8s9im
Ms7qNb5YpOIJdoBfD34MkyDmG9g/TPkya0qRLZtBokTzUeyamVvYbPfrtYBn
YpWkuzFTWViv1Wtym45ZluYq67bbF+0unJUKPmZzEeSpzHb12nOSPq7SJN/q
4+s12Ba+C8fsJs5EGousOcWDcTeVwX3+waMkBnJ2QtVrWzmu1xhLl4EIVbaL
7PeMZUngf5ZxKOLMfaOSNEvFUhVf7Dblv7NUBsX6INls4PnidxlHMvZOE1+y
ZiRV1oSNFkkEC5vJH/4TfwL+bfh2C9Iwq4EHebZOUqS8iStwN3jgXYvdqGQh
9Fea5++StZD+12LDZTRmEr95xB//tMJvWkCgXpCkcM58dnX3AfjZarD3D9MW
nlk66m2LPahgnSxFLFf+eW95HAt18KM5dU2/tjL3Kxz+pQUiOjjgrsXmmRBR
6TJ3qRSlr4FWHstfOermmD2kPFabPCvfNIGH/pTZn1ogxxxlo9mOgsnjDBXu
UywzEcL2oILE5DhJN7DzkyANub++6nY6F/bz+UW/+NwZ9e3ni/ag633uuTWj
/sh97l24NaNBZ2A/94f98zEpfbzcP3s07J3bz8Nuz5036J633Xm9YfG5O9Lr
bya3k9ZbrtatSQSWJbP1Ro311Zmx+5Nb4G4I5mJOBTvHB5h7gN2LFahmujux
D/J0JUC511m2VeM3b56fn1uSx7wFAnnDlQLwIG1/g3ILm7LY2WwQApPHbMkj
JfDCzWaT8QWcwANShYe1VExtRSCXMtAUhWIpUbM42whQ/pDBlmhV2zwjnALd
ApKfeJQLljyJlPF6zcIR2EXmNnhey2DNllJEoQJdgycdagEBeZDlqWAAMixX
wBRYkK2BRtpdH0f0NPBrS0qyZAGgkiEk4HESA9kRkrjBH3GpPrABtguIuk6e
AVM0yfjjYpcJpsQ/cxEHAkwLvkqFyiPa0bsYbM0WmrJ6DRkgEZTkcofr4E8F
lhEYMgAGYW+eganTGSrXyG7oKYC3ZSWwkWEYkTxeIXamSQjcIJn92xI55a3H
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
4v8XsFBiEG9HAAA=

-->

</rfc>

